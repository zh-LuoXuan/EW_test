Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to init_config.o(.text.Init_Cinfig) for Init_Cinfig
    main.o(.text.main) refers to ym_uart.o(.text.get_Uart1_RxData) for get_Uart1_RxData
    main.o(.text.main) refers to ym_rgb.o(.text.RGB_Status_Update) for RGB_Status_Update
    main.o(.text.main) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    init_config.o(.text.Init_Cinfig) refers to bsp_systick.o(.text.Systick_Init_Config) for Systick_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_gpio.o(.text.Touch_Init_Config) for Touch_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_gpio.o(.text.LED_Init_Config) for LED_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_gpio.o(.text.GPIO_Init_Config) for GPIO_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_epwm.o(.text.EPWM_Init_Config) for EPWM_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_rgb.o(.text.RGB_Init_Config) for RGB_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_uart.o(.text.UART1_Init_Config) for UART1_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_gpio.o(.text.KEY_Init_Config) for KEY_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_ccp.o(.text.CCP0A_Init_Config) for CCP0A_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_timer.o(.text.TIMER0_Init_Config) for TIMER0_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_timer.o(.text.TIMER1_Init_Config) for TIMER1_Init_Config
    init_config.o(.text.Init_Cinfig) refers to ym_dma.o(.text.DMA_CCP0A_Config) for DMA_CCP0A_Config
    init_config.o(.ARM.exidx.text.Init_Cinfig) refers to init_config.o(.text.Init_Cinfig) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fputc) refers to retarget.o(.text.fputc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fgetc) refers to retarget.o(.text.fgetc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_exit) refers to retarget.o(.text._sys_exit) for [Anonymous Symbol]
    ym_ccp.o(.text.CCP_Int_Config) refers to ccp.o(.text.CCP_EnableCompareInt) for CCP_EnableCompareInt
    ym_ccp.o(.text.CCP_Int_Config) refers to ym_ccp.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    ym_ccp.o(.text.CCP_Int_Config) refers to ym_ccp.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ym_ccp.o(.text.CCP_Int_Config) refers to ccp.o(.text.CCP_DisableCompareInt) for CCP_DisableCompareInt
    ym_ccp.o(.text.CCP_Int_Config) refers to ym_ccp.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    ym_ccp.o(.ARM.exidx.text.CCP_Int_Config) refers to ym_ccp.o(.text.CCP_Int_Config) for [Anonymous Symbol]
    ym_ccp.o(.ARM.exidx.text.__NVIC_SetPriority) refers to ym_ccp.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    ym_ccp.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to ym_ccp.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    ym_ccp.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to ym_ccp.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    ym_ccp.o(.ARM.exidx.text.Pmn_AF_CCP0x_Disable) refers to ym_ccp.o(.text.Pmn_AF_CCP0x_Disable) for [Anonymous Symbol]
    ym_ccp.o(.text.CCP0A_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_ccp.o(.text.CCP0A_Init_Config) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_ccp.o(.text.CCP0A_Init_Config) refers to ccp.o(.text.CCP_EnablePWMMode) for CCP_EnablePWMMode
    ym_ccp.o(.text.CCP0A_Init_Config) refers to ccp.o(.text.CCP_ConfigCLK) for CCP_ConfigCLK
    ym_ccp.o(.text.CCP0A_Init_Config) refers to ccp.o(.text.CCP_EnableReverseOutput) for CCP_EnableReverseOutput
    ym_ccp.o(.text.CCP0A_Init_Config) refers to ccp.o(.text.CCP_ConfigCompare) for CCP_ConfigCompare
    ym_ccp.o(.text.CCP0A_Init_Config) refers to ccp.o(.text.CCP_EnableRun) for CCP_EnableRun
    ym_ccp.o(.text.CCP0A_Init_Config) refers to ccp.o(.text.CCP_Start) for CCP_Start
    ym_ccp.o(.ARM.exidx.text.CCP0A_Init_Config) refers to ym_ccp.o(.text.CCP0A_Init_Config) for [Anonymous Symbol]
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to ccp.o(.text.CCP_EnablePWMMode) for CCP_EnablePWMMode
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to ccp.o(.text.CCP_ConfigCLK) for CCP_ConfigCLK
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to ccp.o(.text.CCP_EnableReverseOutput) for CCP_EnableReverseOutput
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to ccp.o(.text.CCP_ConfigCompare) for CCP_ConfigCompare
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to ym_ccp.o(.text.CCP_Int_Config) for CCP_Int_Config
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to ccp.o(.text.CCP_EnableRun) for CCP_EnableRun
    ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) refers to ccp.o(.text.CCP_Start) for CCP_Start
    ym_ccp.o(.ARM.exidx.text.CCP_Config_as_LED_B_Breath) refers to ym_ccp.o(.text.CCP_Config_as_LED_B_Breath) for [Anonymous Symbol]
    ym_ccp.o(.ARM.exidx.text.Set_LED_B) refers to ym_ccp.o(.text.Set_LED_B) for [Anonymous Symbol]
    ym_ccp.o(.text.CCP_IRQHandler) refers to ccp.o(.text.CCP_ClearCompareIntFlag) for CCP_ClearCompareIntFlag
    ym_ccp.o(.text.CCP_IRQHandler) refers to ccp.o(.text.CCP_Stop) for CCP_Stop
    ym_ccp.o(.text.CCP_IRQHandler) refers to ccp.o(.text.CCP_DisableRun) for CCP_DisableRun
    ym_ccp.o(.text.CCP_IRQHandler) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_ccp.o(.text.CCP_IRQHandler) refers to ym_ccp.o(.bss.CCP_IRQHandler.camplerTicks) for [Anonymous Symbol]
    ym_ccp.o(.text.CCP_IRQHandler) refers to ym_ccp.o(.bss.CCP_IRQHandler.rgb_num) for [Anonymous Symbol]
    ym_ccp.o(.text.CCP_IRQHandler) refers to ym_ccp.o(.bss.CCP_IRQHandler.control_times) for [Anonymous Symbol]
    ym_ccp.o(.ARM.exidx.text.CCP_IRQHandler) refers to ym_ccp.o(.text.CCP_IRQHandler) for [Anonymous Symbol]
    ym_dma.o(.text.DMA_CCP0A_Config) refers to dma.o(.text.DMA_Init) for DMA_Init
    ym_dma.o(.text.DMA_CCP0A_Config) refers to dma.o(.text.DMA_Start) for DMA_Start
    ym_dma.o(.text.DMA_CCP0A_Config) refers to ym_dma.o(.bss.DMA_InitStructure) for DMA_InitStructure
    ym_dma.o(.text.DMA_CCP0A_Config) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_dma.o(.ARM.exidx.text.DMA_CCP0A_Config) refers to ym_dma.o(.text.DMA_CCP0A_Config) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Mode_Set) refers to ym_rgb.o(.text.RGB_Mode_Update) for RGB_Mode_Update
    ym_rgb.o(.text.RGB_Mode_Set) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.ARM.exidx.text.RGB_Mode_Set) refers to ym_rgb.o(.text.RGB_Mode_Set) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Mode_Update) refers to ym_rgb.o(.text.get_RGB_GRB_Camplar) for get_RGB_GRB_Camplar
    ym_rgb.o(.text.RGB_Mode_Update) refers to ym_rgb.o(.text.Update_Hook) for Update_Hook
    ym_rgb.o(.ARM.exidx.text.RGB_Mode_Update) refers to ym_rgb.o(.text.RGB_Mode_Update) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Color_Set) refers to ym_rgb.o(.text.RGB_Color_Update) for RGB_Color_Update
    ym_rgb.o(.text.RGB_Color_Set) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.ARM.exidx.text.RGB_Color_Set) refers to ym_rgb.o(.text.RGB_Color_Set) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Color_Update) refers to ym_rgb.o(.text.get_RGB_GRB_Camplar) for get_RGB_GRB_Camplar
    ym_rgb.o(.text.RGB_Color_Update) refers to ym_rgb.o(.text.Update_Hook) for Update_Hook
    ym_rgb.o(.ARM.exidx.text.RGB_Color_Update) refers to ym_rgb.o(.text.RGB_Color_Update) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_ColorRGB_Set) refers to ym_rgb.o(.text.RGB_ColorRGB_Update) for RGB_ColorRGB_Update
    ym_rgb.o(.text.RGB_ColorRGB_Set) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.ARM.exidx.text.RGB_ColorRGB_Set) refers to ym_rgb.o(.text.RGB_ColorRGB_Set) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_ColorRGB_Update) refers to ym_rgb.o(.text.get_RGB_GRB_Camplar) for get_RGB_GRB_Camplar
    ym_rgb.o(.text.RGB_ColorRGB_Update) refers to ym_rgb.o(.text.Update_Hook) for Update_Hook
    ym_rgb.o(.ARM.exidx.text.RGB_ColorRGB_Update) refers to ym_rgb.o(.text.RGB_ColorRGB_Update) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Power_Set) refers to ym_rgb.o(.text.RGB_Power_Update) for RGB_Power_Update
    ym_rgb.o(.text.RGB_Power_Set) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.ARM.exidx.text.RGB_Power_Set) refers to ym_rgb.o(.text.RGB_Power_Set) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Power_Update) refers to gpio.o(.text.PORT_ClrBit) for PORT_ClrBit
    ym_rgb.o(.text.RGB_Power_Update) refers to gpio.o(.text.PORT_SetBit) for PORT_SetBit
    ym_rgb.o(.text.RGB_Power_Update) refers to ym_rgb.o(.text.Update_Hook) for Update_Hook
    ym_rgb.o(.ARM.exidx.text.RGB_Power_Update) refers to ym_rgb.o(.text.RGB_Power_Update) for [Anonymous Symbol]
    ym_rgb.o(.text.Update_Hook) refers to ccp.o(.text.CCP_EnableRun) for CCP_EnableRun
    ym_rgb.o(.text.Update_Hook) refers to ccp.o(.text.CCP_Start) for CCP_Start
    ym_rgb.o(.text.Update_Hook) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.ARM.exidx.text.Update_Hook) refers to ym_rgb.o(.text.Update_Hook) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Breath_Update) refers to ym_rgb.o(.text.get_white_breathRGB) for get_white_breathRGB
    ym_rgb.o(.text.RGB_Breath_Update) refers to ym_rgb.o(.text.RGB_ColorRGB_Update) for RGB_ColorRGB_Update
    ym_rgb.o(.text.RGB_Breath_Update) refers to ym_rgb.o(.text.Update_Hook) for Update_Hook
    ym_rgb.o(.ARM.exidx.text.RGB_Breath_Update) refers to ym_rgb.o(.text.RGB_Breath_Update) for [Anonymous Symbol]
    ym_rgb.o(.text.get_white_breathRGB) refers to userlib.o(.text.limit_int16) for limit_int16
    ym_rgb.o(.text.get_white_breathRGB) refers to ym_rgb.o(.bss.get_white_breathRGB.R) for [Anonymous Symbol]
    ym_rgb.o(.text.get_white_breathRGB) refers to ym_rgb.o(.bss.get_white_breathRGB.G) for [Anonymous Symbol]
    ym_rgb.o(.text.get_white_breathRGB) refers to ym_rgb.o(.bss.get_white_breathRGB.B) for [Anonymous Symbol]
    ym_rgb.o(.text.get_white_breathRGB) refers to ym_rgb.o(.data.get_white_breathRGB.addSymbol) for [Anonymous Symbol]
    ym_rgb.o(.text.get_white_breathRGB) refers to ym_rgb.o(.bss.get_white_breathRGB.fdb) for [Anonymous Symbol]
    ym_rgb.o(.ARM.exidx.text.get_white_breathRGB) refers to ym_rgb.o(.text.get_white_breathRGB) for [Anonymous Symbol]
    ym_rgb.o(.text.get_RGB_GRB_Camplar) refers to ym_rgb.o(.text.get_CamplarBuff) for get_CamplarBuff
    ym_rgb.o(.ARM.exidx.text.get_RGB_GRB_Camplar) refers to ym_rgb.o(.text.get_RGB_GRB_Camplar) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Status_Update) refers to ym_rgb.o(.text.RGB_Power_Update) for RGB_Power_Update
    ym_rgb.o(.text.RGB_Status_Update) refers to ym_rgb.o(.text.RGB_Color_Update) for RGB_Color_Update
    ym_rgb.o(.text.RGB_Status_Update) refers to ym_rgb.o(.text.RGB_Mode_Update) for RGB_Mode_Update
    ym_rgb.o(.text.RGB_Status_Update) refers to ym_rgb.o(.text.RGB_ColorRGB_Update) for RGB_ColorRGB_Update
    ym_rgb.o(.ARM.exidx.text.RGB_Status_Update) refers to ym_rgb.o(.text.RGB_Status_Update) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_rgb.o(.text.RGB_Init_Config) refers to gpio.o(.text.PORT_SetBit) for PORT_SetBit
    ym_rgb.o(.text.RGB_Init_Config) refers to ym_rgb.o(.text.RGB_DataInit) for RGB_DataInit
    ym_rgb.o(.text.RGB_Init_Config) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.ARM.exidx.text.RGB_Init_Config) refers to ym_rgb.o(.text.RGB_Init_Config) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_DataInit) refers to ym_rgb.o(.text.get_RGB_GRB_Camplar) for get_RGB_GRB_Camplar
    ym_rgb.o(.text.RGB_DataInit) refers to ym_rgb.o(.text.RGB_Mode_Set) for RGB_Mode_Set
    ym_rgb.o(.text.RGB_DataInit) refers to ym_rgb.o(.text.RGB_Status_Update) for RGB_Status_Update
    ym_rgb.o(.text.RGB_DataInit) refers to ym_rgb.o(.bss.DMACamplaBuff) for DMACamplaBuff
    ym_rgb.o(.ARM.exidx.text.RGB_DataInit) refers to ym_rgb.o(.text.RGB_DataInit) for [Anonymous Symbol]
    ym_rgb.o(.text.get_CamplarBuff) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.text.get_CamplarBuff) refers to ym_rgb.o(.bss.DMACamplaBuff) for DMACamplaBuff
    ym_rgb.o(.ARM.exidx.text.get_CamplarBuff) refers to ym_rgb.o(.text.get_CamplarBuff) for [Anonymous Symbol]
    ym_timer.o(.text.TMR0_Int_Config) refers to timer.o(.text.TMR_EnableOverflowInt) for TMR_EnableOverflowInt
    ym_timer.o(.text.TMR0_Int_Config) refers to ym_timer.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ym_timer.o(.text.TMR0_Int_Config) refers to ym_timer.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    ym_timer.o(.text.TMR0_Int_Config) refers to timer.o(.text.TMR_Start) for TMR_Start
    ym_timer.o(.ARM.exidx.text.TMR0_Int_Config) refers to ym_timer.o(.text.TMR0_Int_Config) for [Anonymous Symbol]
    ym_timer.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to ym_timer.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    ym_timer.o(.ARM.exidx.text.__NVIC_SetPriority) refers to ym_timer.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    ym_timer.o(.text.TMR1_Int_Config) refers to timer.o(.text.TMR_EnableOverflowInt) for TMR_EnableOverflowInt
    ym_timer.o(.text.TMR1_Int_Config) refers to ym_timer.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ym_timer.o(.text.TMR1_Int_Config) refers to ym_timer.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    ym_timer.o(.text.TMR1_Int_Config) refers to timer.o(.text.TMR_Start) for TMR_Start
    ym_timer.o(.ARM.exidx.text.TMR1_Int_Config) refers to ym_timer.o(.text.TMR1_Int_Config) for [Anonymous Symbol]
    ym_timer.o(.text.TIMER0_Init_Config) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_ConfigRunMode) for TMR_ConfigRunMode
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_ConfigClk) for TMR_ConfigClk
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_SetPeriod) for TMR_SetPeriod
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_DisableOneShotMode) for TMR_DisableOneShotMode
    ym_timer.o(.text.TIMER0_Init_Config) refers to ym_timer.o(.text.TMR0_Int_Config) for TMR0_Int_Config
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_Start) for TMR_Start
    ym_timer.o(.ARM.exidx.text.TIMER0_Init_Config) refers to ym_timer.o(.text.TIMER0_Init_Config) for [Anonymous Symbol]
    ym_timer.o(.text.TIMER1_Init_Config) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_timer.o(.text.TIMER1_Init_Config) refers to timer.o(.text.TMR_ConfigRunMode) for TMR_ConfigRunMode
    ym_timer.o(.text.TIMER1_Init_Config) refers to timer.o(.text.TMR_ConfigClk) for TMR_ConfigClk
    ym_timer.o(.text.TIMER1_Init_Config) refers to timer.o(.text.TMR_SetPeriod) for TMR_SetPeriod
    ym_timer.o(.text.TIMER1_Init_Config) refers to timer.o(.text.TMR_DisableOneShotMode) for TMR_DisableOneShotMode
    ym_timer.o(.text.TIMER1_Init_Config) refers to ym_timer.o(.text.TMR1_Int_Config) for TMR1_Int_Config
    ym_timer.o(.text.TIMER1_Init_Config) refers to timer.o(.text.TMR_Start) for TMR_Start
    ym_timer.o(.ARM.exidx.text.TIMER1_Init_Config) refers to ym_timer.o(.text.TIMER1_Init_Config) for [Anonymous Symbol]
    ym_timer.o(.text.TIMER0_IRQHandler) refers to timer.o(.text.TMR_ClearOverflowIntFlag) for TMR_ClearOverflowIntFlag
    ym_timer.o(.ARM.exidx.text.TIMER0_IRQHandler) refers to ym_timer.o(.text.TIMER0_IRQHandler) for [Anonymous Symbol]
    ym_timer.o(.text.TIMER1_IRQHandler) refers to timer.o(.text.TMR_ClearOverflowIntFlag) for TMR_ClearOverflowIntFlag
    ym_timer.o(.text.TIMER1_IRQHandler) refers to ym_rgb.o(.text.RGB_Breath_Update) for RGB_Breath_Update
    ym_timer.o(.text.TIMER1_IRQHandler) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_timer.o(.ARM.exidx.text.TIMER1_IRQHandler) refers to ym_timer.o(.text.TIMER1_IRQHandler) for [Anonymous Symbol]
    ym_uart.o(.text.UART1_Init_Config) refers to cgc.o(.text.CGC_PER12PeriphClockCmd) for CGC_PER12PeriphClockCmd
    ym_uart.o(.text.UART1_Init_Config) refers to uart.o(.text.UART_ConfigRunMode) for UART_ConfigRunMode
    ym_uart.o(.text.UART1_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_uart.o(.text.UART1_Init_Config) refers to uart.o(.text.UART_EnableRBRInt) for UART_EnableRBRInt
    ym_uart.o(.text.UART1_Init_Config) refers to ym_uart.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    ym_uart.o(.text.UART1_Init_Config) refers to ym_uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ym_uart.o(.ARM.exidx.text.UART1_Init_Config) refers to ym_uart.o(.text.UART1_Init_Config) for [Anonymous Symbol]
    ym_uart.o(.ARM.exidx.text.__NVIC_SetPriority) refers to ym_uart.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    ym_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to ym_uart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    ym_uart.o(.text.get_Uart1_RxData) refers to ym_uart.o(.bss.rx_ind) for rx_ind
    ym_uart.o(.text.get_Uart1_RxData) refers to ym_uart.o(.bss.UART1RxBuffer) for UART1RxBuffer
    ym_uart.o(.text.get_Uart1_RxData) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_uart.o(.ARM.exidx.text.get_Uart1_RxData) refers to ym_uart.o(.text.get_Uart1_RxData) for [Anonymous Symbol]
    ym_uart.o(.text.UART1_IRQHandler) refers to ym_uart.o(.bss.rxTimes) for rxTimes
    ym_uart.o(.text.UART1_IRQHandler) refers to ym_uart.o(.bss.UART1RxBuffer) for UART1RxBuffer
    ym_uart.o(.ARM.exidx.text.UART1_IRQHandler) refers to ym_uart.o(.text.UART1_IRQHandler) for [Anonymous Symbol]
    ym_epwm.o(.text.EPWM_Init_Config) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigRunMode) for EPWM_ConfigRunMode
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigChannelClk) for EPWM_ConfigChannelClk
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigChannelPeriod) for EPWM_ConfigChannelPeriod
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigChannelSymDuty) for EPWM_ConfigChannelSymDuty
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_DisableDeadZone) for EPWM_DisableDeadZone
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_DisableReverseOutput) for EPWM_DisableReverseOutput
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_EnableAutoLoadMode) for EPWM_EnableAutoLoadMode
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigLoadAndIntMode) for EPWM_ConfigLoadAndIntMode
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_AllBrakeDisable) for EPWM_AllBrakeDisable
    ym_epwm.o(.text.EPWM_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_EnableOutput) for EPWM_EnableOutput
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_Start) for EPWM_Start
    ym_epwm.o(.ARM.exidx.text.EPWM_Init_Config) refers to ym_epwm.o(.text.EPWM_Init_Config) for [Anonymous Symbol]
    ym_epwm.o(.text.EPWM_IRQHandler) refers to epwm.o(.text.EPWM_ClearZeroIntFlag) for EPWM_ClearZeroIntFlag
    ym_epwm.o(.ARM.exidx.text.EPWM_IRQHandler) refers to ym_epwm.o(.text.EPWM_IRQHandler) for [Anonymous Symbol]
    bsp_systick.o(.text.Systick_Init_Config) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bsp_systick.o(.text.Systick_Init_Config) refers to bsp_systick.o(.text.SysTick_Config) for SysTick_Config
    bsp_systick.o(.text.Systick_Init_Config) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_systick.o(.ARM.exidx.text.Systick_Init_Config) refers to bsp_systick.o(.text.Systick_Init_Config) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Config) refers to bsp_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    bsp_systick.o(.ARM.exidx.text.SysTick_Config) refers to bsp_systick.o(.text.SysTick_Config) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Delay_us) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bsp_systick.o(.text.SysTick_Delay_us) refers to bsp_systick.o(.text.SysTick_Config) for SysTick_Config
    bsp_systick.o(.text.SysTick_Delay_us) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_systick.o(.ARM.exidx.text.SysTick_Delay_us) refers to bsp_systick.o(.text.SysTick_Delay_us) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Delay_ms) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bsp_systick.o(.text.SysTick_Delay_ms) refers to bsp_systick.o(.text.SysTick_Config) for SysTick_Config
    bsp_systick.o(.text.SysTick_Delay_ms) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_systick.o(.ARM.exidx.text.SysTick_Delay_ms) refers to bsp_systick.o(.text.SysTick_Delay_ms) for [Anonymous Symbol]
    bsp_systick.o(.text.Delay_us) refers to bsp_systick.o(.bss.Ticks) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.Delay_us) refers to bsp_systick.o(.text.Delay_us) for [Anonymous Symbol]
    bsp_systick.o(.text.Delay_ms) refers to bsp_systick.o(.bss.Ticks) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.Delay_ms) refers to bsp_systick.o(.text.Delay_ms) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Handler) refers to bsp_systick.o(.bss.Ticks) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.SysTick_Handler) refers to bsp_systick.o(.text.SysTick_Handler) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to bsp_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    sys_optionbyte.o(ram_fetch_code) refers to flash.o(ram_fetch_code) for flashRead
    sys_optionbyte.o(.ARM.exidxram_fetch_code) refers to sys_optionbyte.o(ram_fetch_code) for [Anonymous Symbol]
    ym_gpio.o(.text.LED_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_gpio.o(.text.LED_Init_Config) refers to gpio.o(.text.PORT_SetBit) for PORT_SetBit
    ym_gpio.o(.ARM.exidx.text.LED_Init_Config) refers to ym_gpio.o(.text.LED_Init_Config) for [Anonymous Symbol]
    ym_gpio.o(.text.GPIO_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_gpio.o(.text.GPIO_Init_Config) refers to gpio.o(.text.PORT_SetBit) for PORT_SetBit
    ym_gpio.o(.ARM.exidx.text.GPIO_Init_Config) refers to ym_gpio.o(.text.GPIO_Init_Config) for [Anonymous Symbol]
    ym_gpio.o(.text.KEY_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_gpio.o(.ARM.exidx.text.KEY_Init_Config) refers to ym_gpio.o(.text.KEY_Init_Config) for [Anonymous Symbol]
    ym_gpio.o(.text.Touch_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_gpio.o(.ARM.exidx.text.Touch_Init_Config) refers to ym_gpio.o(.text.Touch_Init_Config) for [Anonymous Symbol]
    dma.o(.text.DMA_Init) refers to cgc.o(.text.CGC_PER10PeriphClockCmd) for CGC_PER10PeriphClockCmd
    dma.o(.ARM.exidx.text.DMA_Init) refers to dma.o(.text.DMA_Init) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.DMA_Start) refers to dma.o(.text.DMA_Start) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.DMA_Stop) refers to dma.o(.text.DMA_Stop) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.DMA_Trigger) refers to dma.o(.text.DMA_Trigger) for [Anonymous Symbol]
    delay.o(.text.delay1_us) refers to delay.o(.bss.Value_us) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay1_us) refers to delay.o(.text.delay1_us) for [Anonymous Symbol]
    delay.o(.text.m0_delay_ms) refers to delay.o(.text.delay1_us) for delay1_us
    delay.o(.ARM.exidx.text.m0_delay_ms) refers to delay.o(.text.m0_delay_ms) for [Anonymous Symbol]
    delay.o(.text.m0_delay_us) refers to delay.o(.text.delay1_us) for delay1_us
    delay.o(.ARM.exidx.text.m0_delay_us) refers to delay.o(.text.m0_delay_us) for [Anonymous Symbol]
    delay.o(.text.delay_init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    delay.o(.text.delay_init) refers to delay.o(.bss.Value_us) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_init) refers to delay.o(.text.delay_init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_SetBit) refers to gpio.o(.text.PORT_SetBit) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_ClrBit) refers to gpio.o(.text.PORT_ClrBit) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_ToggleBit) refers to gpio.o(.text.PORT_ToggleBit) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_GetBit) refers to gpio.o(.text.PORT_GetBit) for [Anonymous Symbol]
    gpio.o(.text.PORT_GetBitValue) refers to gpio.o(.text.PORT_GetBit) for PORT_GetBit
    gpio.o(.ARM.exidx.text.PORT_GetBitValue) refers to gpio.o(.text.PORT_GetBitValue) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_PullUp) refers to gpio.o(.text.PORT_PullUp) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_PullDown) refers to gpio.o(.text.PORT_PullDown) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_Init) refers to gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.RESTPinGpio_Set) refers to gpio.o(.text.RESTPinGpio_Set) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_Start) refers to timer.o(.text.TMR_Start) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_Stop) refers to timer.o(.text.TMR_Stop) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_ConfigRunMode) refers to timer.o(.text.TMR_ConfigRunMode) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_EnableOneShotMode) refers to timer.o(.text.TMR_EnableOneShotMode) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_DisableOneShotMode) refers to timer.o(.text.TMR_DisableOneShotMode) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_ConfigClk) refers to timer.o(.text.TMR_ConfigClk) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_SetPeriod) refers to timer.o(.text.TMR_SetPeriod) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_EnableOverflowInt) refers to timer.o(.text.TMR_EnableOverflowInt) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_DisableOverflowInt) refers to timer.o(.text.TMR_DisableOverflowInt) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_GetOverflowIntFlag) refers to timer.o(.text.TMR_GetOverflowIntFlag) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_ClearOverflowIntFlag) refers to timer.o(.text.TMR_ClearOverflowIntFlag) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_GetTimingData) refers to timer.o(.text.TMR_GetTimingData) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_Start) refers to ccp.o(.text.CCP_Start) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_Stop) refers to ccp.o(.text.CCP_Stop) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCLK) refers to ccp.o(.text.CCP_ConfigCLK) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableRun) refers to ccp.o(.text.CCP_EnableRun) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableRun) refers to ccp.o(.text.CCP_DisableRun) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnablePWMMode) refers to ccp.o(.text.CCP_EnablePWMMode) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnablePWMHalfCycleMode) refers to ccp.o(.text.CCP_EnablePWMHalfCycleMode) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisablePWMHalfCycleMode) refers to ccp.o(.text.CCP_DisablePWMHalfCycleMode) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCompare) refers to ccp.o(.text.CCP_ConfigCompare) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableReverseOutput) refers to ccp.o(.text.CCP_EnableReverseOutput) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableReverseOutput) refers to ccp.o(.text.CCP_DisableReverseOutput) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableOverflowInt) refers to ccp.o(.text.CCP_EnableOverflowInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableOverflowInt) refers to ccp.o(.text.CCP_DisableOverflowInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetOverflowIntFlag) refers to ccp.o(.text.CCP_GetOverflowIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearOverflowIntFlag) refers to ccp.o(.text.CCP_ClearOverflowIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCompareInt) refers to ccp.o(.text.CCP_EnableCompareInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCompareInt) refers to ccp.o(.text.CCP_DisableCompareInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCompareIntFlag) refers to ccp.o(.text.CCP_GetCompareIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCompareIntFlag) refers to ccp.o(.text.CCP_ClearCompareIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0) refers to ccp.o(.text.CCP_EnableCAPMode0) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode0) refers to ccp.o(.text.CCP_ConfigCAPMode0) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_SelCAPMode0Channel) refers to ccp.o(.text.CCP_SelCAPMode0Channel) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode0Result) refers to ccp.o(.text.CCP_GetCAPMode0Result) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0Int) refers to ccp.o(.text.CCP_EnableCAPMode0Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode0Int) refers to ccp.o(.text.CCP_DisableCAPMode0Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode0IntFlag) refers to ccp.o(.text.CCP_GetCAPMode0IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCAPMode0IntFlag) refers to ccp.o(.text.CCP_ClearCAPMode0IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1) refers to ccp.o(.text.CCP_EnableCAPMode1) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1) refers to ccp.o(.text.CCP_DisableCAPMode1) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPnReload) refers to ccp.o(.text.CCP_EnableCAPnReload) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPnReload) refers to ccp.o(.text.CCP_DisableCAPnReload) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode1) refers to ccp.o(.text.CCP_ConfigCAPMode1) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_SelCAPMode1Channel) refers to ccp.o(.text.CCP_SelCAPMode1Channel) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_TriggerCaputer) refers to ccp.o(.text.CCP_TriggerCaputer) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode1Result) refers to ccp.o(.text.CCP_GetCAPMode1Result) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1Int) refers to ccp.o(.text.CCP_EnableCAPMode1Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1Int) refers to ccp.o(.text.CCP_DisableCAPMode1Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode1IntFlag) refers to ccp.o(.text.CCP_GetCAPMode1IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCAPMode1IntFlag) refers to ccp.o(.text.CCP_ClearCAPMode1IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2) refers to ccp.o(.text.CCP_EnableCAPMode2) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2) refers to ccp.o(.text.CCP_DisableCAPMode2) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode2) refers to ccp.o(.text.CCP_ConfigCAPMode2) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_SelCAPMode2Channel) refers to ccp.o(.text.CCP_SelCAPMode2Channel) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode2Result) refers to ccp.o(.text.CCP_GetCAPMode2Result) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2Int) refers to ccp.o(.text.CCP_EnableCAPMode2Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2Int) refers to ccp.o(.text.CCP_DisableCAPMode2Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode2IntFlag) refers to ccp.o(.text.CCP_GetCAPMode2IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCAPMode2IntFlag) refers to ccp.o(.text.CCP_ClearCAPMode2IntFlag) for [Anonymous Symbol]
    uart.o(.text.UART_ConfigRunMode) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    uart.o(.text.UART_ConfigRunMode) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    uart.o(.ARM.exidx.text.UART_ConfigRunMode) refers to uart.o(.text.UART_ConfigRunMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_WriteTHR) refers to uart.o(.text.UART_WriteTHR) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_ReadRBR) refers to uart.o(.text.UART_ReadRBR) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableRxLineInt) refers to uart.o(.text.UART_EnableRxLineInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableRxLineInt) refers to uart.o(.text.UART_DisableRxLineInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableTHREInt) refers to uart.o(.text.UART_EnableTHREInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableTHREInt) refers to uart.o(.text.UART_DisableTHREInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableRBRInt) refers to uart.o(.text.UART_EnableRBRInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableRBRInt) refers to uart.o(.text.UART_DisableRBRInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Lock) refers to uart.o(.text.UART_Lock) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER0PeriphClockCmd) refers to cgc.o(.text.CGC_PER0PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER10PeriphClockCmd) refers to cgc.o(.text.CGC_PER10PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER11PeriphClockCmd) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER12PeriphClockCmd) refers to cgc.o(.text.CGC_PER12PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER13PeriphClockCmd) refers to cgc.o(.text.CGC_PER13PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_LSI_Enable) refers to cgc.o(.text.CGC_LSI_Enable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_LSI_Disable) refers to cgc.o(.text.CGC_LSI_Disable) for [Anonymous Symbol]
    cgc.o(.text.CGC_LSI_CFG_AS_FCLK) refers to cgc.o(.bss.USE_LSI_SYSTYEM_CLOCK) for USE_LSI_SYSTYEM_CLOCK
    cgc.o(.ARM.exidx.text.CGC_LSI_CFG_AS_FCLK) refers to cgc.o(.text.CGC_LSI_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.text.CGC_HSI_CFG_AS_FCLK) refers to cgc.o(.bss.USE_HSI_SYSTYEM_CLOCK) for USE_HSI_SYSTYEM_CLOCK
    cgc.o(.ARM.exidx.text.CGC_HSI_CFG_AS_FCLK) refers to cgc.o(.text.CGC_HSI_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.text.CGC_HSE_CFG_AS_FCLK) refers to cgc.o(.bss.USE_HSE_SYSTYEM_CLOCK) for USE_HSE_SYSTYEM_CLOCK
    cgc.o(.ARM.exidx.text.CGC_HSE_CFG_AS_FCLK) refers to cgc.o(.text.CGC_HSE_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_CFG_AS_FCLK) refers to cgc.o(.text.CGC_PLL_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_HSE_Disable) refers to cgc.o(.text.CGC_HSE_Disable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_OSC_Selet) refers to cgc.o(.text.CGC_OSC_Selet) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_SLEEP_Selet) refers to cgc.o(.text.CGC_SLEEP_Selet) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_Hoco_Stop) refers to cgc.o(.text.CGC_Hoco_Stop) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_Hoco_Start) refers to cgc.o(.text.CGC_Hoco_Start) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_LSITIMERCLK_Enable) refers to cgc.o(.text.CGC_LSITIMERCLK_Enable) for [Anonymous Symbol]
    cgc.o(.text.CGC_PLL_Enable) refers to cgc.o(.text.CGC_MCLK_Status) for CGC_MCLK_Status
    cgc.o(.ARM.exidx.text.CGC_PLL_Enable) refers to cgc.o(.text.CGC_PLL_Enable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_MCLK_Status) refers to cgc.o(.text.CGC_MCLK_Status) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Disable) refers to cgc.o(.text.CGC_PLL_Disable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Sel) refers to cgc.o(.text.CGC_PLL_Sel) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Multi) refers to cgc.o(.text.CGC_PLL_Multi) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Div) refers to cgc.o(.text.CGC_PLL_Div) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_MCLK_PLLSel) refers to cgc.o(.text.CGC_MCLK_PLLSel) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.Reset_Status_Get) refers to cgc.o(.text.Reset_Status_Get) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigRunMode) refers to epwm.o(.text.EPWM_ConfigRunMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelClk) refers to epwm.o(.text.EPWM_ConfigChannelClk) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelPeriod) refers to epwm.o(.text.EPWM_ConfigChannelPeriod) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelSymDuty) refers to epwm.o(.text.EPWM_ConfigChannelSymDuty) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelAsymDuty) refers to epwm.o(.text.EPWM_ConfigChannelAsymDuty) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableOneShotMode) refers to epwm.o(.text.EPWM_EnableOneShotMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableAutoLoadMode) refers to epwm.o(.text.EPWM_EnableAutoLoadMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigLoadAndIntMode) refers to epwm.o(.text.EPWM_ConfigLoadAndIntMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableEventLoad) refers to epwm.o(.text.EPWM_EnableEventLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableReverseOutput) refers to epwm.o(.text.EPWM_EnableReverseOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableReverseOutput) refers to epwm.o(.text.EPWM_DisableReverseOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableDeadZone) refers to epwm.o(.text.EPWM_EnableDeadZone) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableDeadZone) refers to epwm.o(.text.EPWM_DisableDeadZone) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableChannelRemap) refers to epwm.o(.text.EPWM_EnableChannelRemap) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableChannelRemap) refers to epwm.o(.text.EPWM_DisableChannelRemap) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableOutput) refers to epwm.o(.text.EPWM_EnableOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableOutput) refers to epwm.o(.text.EPWM_DisableOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_Start) refers to epwm.o(.text.EPWM_Start) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_Stop) refers to epwm.o(.text.EPWM_Stop) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ForceStop) refers to epwm.o(.text.EPWM_ForceStop) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableMaskPreload) refers to epwm.o(.text.EPWM_EnableMaskPreload) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableMaskPreload) refers to epwm.o(.text.EPWM_DisableMaskPreload) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_WriteMaskBuffer) refers to epwm.o(.text.EPWM_WriteMaskBuffer) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableMaskOutPut) refers to epwm.o(.text.EPWM_EnableMaskOutPut) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableMaskOutPut) refers to epwm.o(.text.EPWM_DisableMaskOutPut) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigCompareTriger) refers to epwm.o(.text.EPWM_ConfigCompareTriger) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableHall) refers to epwm.o(.text.EPWM_EnableHall) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableHall) refers to epwm.o(.text.EPWM_DisableHall) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetHallState) refers to epwm.o(.text.EPWM_GetHallState) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorState) refers to epwm.o(.text.EPWM_ClearHallErrorState) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_AllBrakeEnable) refers to epwm.o(.text.EPWM_AllBrakeEnable) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_AllBrakeDisable) refers to epwm.o(.text.EPWM_AllBrakeDisable) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeMode) refers to epwm.o(.text.EPWM_ConfigBrakeMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverDelay) refers to epwm.o(.text.EPWM_ConfigBrakeRecoverDelay) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverLoad) refers to epwm.o(.text.EPWM_ConfigBrakeRecoverLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableFaultBrake) refers to epwm.o(.text.EPWM_EnableFaultBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableFaultBrake) refers to epwm.o(.text.EPWM_DisableFaultBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigFaultBrakeLevel) refers to epwm.o(.text.EPWM_ConfigFaultBrakeLevel) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableEXTLEBrake) refers to epwm.o(.text.EPWM_EnableEXTLEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableEXTEEBrake) refers to epwm.o(.text.EPWM_EnableEXTEEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeFilter) refers to epwm.o(.text.EPWM_ConfigBrakeFilter) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableACMP0LEBrake) refers to epwm.o(.text.EPWM_EnableACMP0LEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableACMP1LEBrake) refers to epwm.o(.text.EPWM_EnableACMP1LEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableSoftwareBrake) refers to epwm.o(.text.EPWM_EnableSoftwareBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableSoftwareBrake) refers to epwm.o(.text.EPWM_DisableSoftwareBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableBrakeInt) refers to epwm.o(.text.EPWM_EnableBrakeInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableBrakeInt) refers to epwm.o(.text.EPWM_DisableBrakeInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetBrakeIntFlag) refers to epwm.o(.text.EPWM_GetBrakeIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearBrakeIntFlag) refers to epwm.o(.text.EPWM_ClearBrakeIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetBrakeFlag) refers to epwm.o(.text.EPWM_GetBrakeFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearBrake) refers to epwm.o(.text.EPWM_ClearBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableHallErrorInt) refers to epwm.o(.text.EPWM_EnableHallErrorInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableHallErrorInt) refers to epwm.o(.text.EPWM_DisableHallErrorInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetHallErrorIntFlag) refers to epwm.o(.text.EPWM_GetHallErrorIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorIntFlag) refers to epwm.o(.text.EPWM_ClearHallErrorIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableUpCmpInt) refers to epwm.o(.text.EPWM_EnableUpCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableUpCmpInt) refers to epwm.o(.text.EPWM_DisableUpCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetUpCmpIntFlag) refers to epwm.o(.text.EPWM_GetUpCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearUpCmpIntFlag) refers to epwm.o(.text.EPWM_ClearUpCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableDownCmpInt) refers to epwm.o(.text.EPWM_EnableDownCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableDownCmpInt) refers to epwm.o(.text.EPWM_DisableDownCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetDownCmpIntFlag) refers to epwm.o(.text.EPWM_GetDownCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearDownCmpIntFlag) refers to epwm.o(.text.EPWM_ClearDownCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnablePeriodInt) refers to epwm.o(.text.EPWM_EnablePeriodInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisablePeriodInt) refers to epwm.o(.text.EPWM_DisablePeriodInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetPeriodIntFlag) refers to epwm.o(.text.EPWM_GetPeriodIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearPeriodIntFlag) refers to epwm.o(.text.EPWM_ClearPeriodIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableZeroInt) refers to epwm.o(.text.EPWM_EnableZeroInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableZeroInt) refers to epwm.o(.text.EPWM_DisableZeroInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetZeroIntFlag) refers to epwm.o(.text.EPWM_GetZeroIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearZeroIntFlag) refers to epwm.o(.text.EPWM_ClearZeroIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableCountCmpInt) refers to epwm.o(.text.EPWM_EnableCountCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableCountCmpInt) refers to epwm.o(.text.EPWM_DisableCountCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetCountCmpIntFlag) refers to epwm.o(.text.EPWM_GetCountCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearCountCmpIntFlag) refers to epwm.o(.text.EPWM_ClearCountCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableBrakeIntSum) refers to epwm.o(.text.EPWM_EnableBrakeIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableBrakeIntSum) refers to epwm.o(.text.EPWM_DisableBrakeIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeIntSum) refers to epwm.o(.text.EPWM_ConfigBrakeIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableZeroIntSum) refers to epwm.o(.text.EPWM_EnableZeroIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableZeroIntSum) refers to epwm.o(.text.EPWM_DisableZeroIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigZeroIntSum) refers to epwm.o(.text.EPWM_ConfigZeroIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableIntAccompanyWithLoad) refers to epwm.o(.text.EPWM_EnableIntAccompanyWithLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableIntAccompanyWithLoad) refers to epwm.o(.text.EPWM_DisableIntAccompanyWithLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableDebugSuspend) refers to epwm.o(.text.EPWM_EnableDebugSuspend) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableDebugSuspend) refers to epwm.o(.text.EPWM_DisableDebugSuspend) for [Anonymous Symbol]
    flash.o(.ARM.exidxram_fetch_code) refers to flash.o(ram_fetch_code) for [Anonymous Symbol]
    userlib.o(.text.limit_int8) refers to userlib.o(.bss.limit_int8.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.limit_int8) refers to userlib.o(.text.limit_int8) for [Anonymous Symbol]
    userlib.o(.text.limit_int16) refers to userlib.o(.bss.limit_int16.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.limit_int16) refers to userlib.o(.text.limit_int16) for [Anonymous Symbol]
    userlib.o(.text.limit_int32) refers to userlib.o(.bss.limit_int32.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.limit_int32) refers to userlib.o(.text.limit_int32) for [Anonymous Symbol]
    userlib.o(.text.limit_uint8) refers to userlib.o(.bss.limit_uint8.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.limit_uint8) refers to userlib.o(.text.limit_uint8) for [Anonymous Symbol]
    userlib.o(.text.limit_uint16) refers to userlib.o(.bss.limit_uint16.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.limit_uint16) refers to userlib.o(.text.limit_uint16) for [Anonymous Symbol]
    userlib.o(.text.limit_uint32) refers to userlib.o(.bss.limit_uint32.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.limit_uint32) refers to userlib.o(.text.limit_uint32) for [Anonymous Symbol]
    userlib.o(.text.limit_float) refers to fcmple.o(.text) for __aeabi_fcmple
    userlib.o(.text.limit_float) refers to fcmpge.o(.text) for __aeabi_fcmpge
    userlib.o(.text.limit_float) refers to userlib.o(.bss.limit_float.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.limit_float) refers to userlib.o(.text.limit_float) for [Anonymous Symbol]
    userlib.o(.text.int8_deadline) refers to userlib.o(.bss.int8_deadline.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.int8_deadline) refers to userlib.o(.text.int8_deadline) for [Anonymous Symbol]
    userlib.o(.text.int16_deadline) refers to userlib.o(.bss.int16_deadline.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.int16_deadline) refers to userlib.o(.text.int16_deadline) for [Anonymous Symbol]
    userlib.o(.text.int32_deadline) refers to userlib.o(.bss.int32_deadline.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.int32_deadline) refers to userlib.o(.text.int32_deadline) for [Anonymous Symbol]
    userlib.o(.text.uint8_deadline) refers to userlib.o(.bss.uint8_deadline.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.uint8_deadline) refers to userlib.o(.text.uint8_deadline) for [Anonymous Symbol]
    userlib.o(.text.uint16_deadline) refers to userlib.o(.bss.uint16_deadline.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.uint16_deadline) refers to userlib.o(.text.uint16_deadline) for [Anonymous Symbol]
    userlib.o(.text.uint32_deadline) refers to userlib.o(.bss.uint32_deadline.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.uint32_deadline) refers to userlib.o(.text.uint32_deadline) for [Anonymous Symbol]
    userlib.o(.text.float_deadline) refers to fcmple.o(.text) for __aeabi_fcmple
    userlib.o(.text.float_deadline) refers to fcmpge.o(.text) for __aeabi_fcmpge
    userlib.o(.text.float_deadline) refers to userlib.o(.bss.float_deadline.change) for [Anonymous Symbol]
    userlib.o(.ARM.exidx.text.float_deadline) refers to userlib.o(.text.float_deadline) for [Anonymous Symbol]
    startup_cms32m67xx.o(RESET) refers to startup_cms32m67xx.o(STACK) for __initial_sp
    startup_cms32m67xx.o(RESET) refers to startup_cms32m67xx.o(.text) for Reset_Handler
    startup_cms32m67xx.o(RESET) refers to bsp_systick.o(.text.SysTick_Handler) for SysTick_Handler
    startup_cms32m67xx.o(RESET) refers to system_cms32m67xx.o(.text.LVI_IRQHandler) for LVI_IRQHandler
    startup_cms32m67xx.o(RESET) refers to ym_ccp.o(.text.CCP_IRQHandler) for CCP_IRQHandler
    startup_cms32m67xx.o(RESET) refers to ym_uart.o(.text.UART1_IRQHandler) for UART1_IRQHandler
    startup_cms32m67xx.o(RESET) refers to ym_epwm.o(.text.EPWM_IRQHandler) for EPWM_IRQHandler
    startup_cms32m67xx.o(RESET) refers to ym_timer.o(.text.TIMER0_IRQHandler) for TIMER0_IRQHandler
    startup_cms32m67xx.o(RESET) refers to ym_timer.o(.text.TIMER1_IRQHandler) for TIMER1_IRQHandler
    startup_cms32m67xx.o(.text) refers to system_cms32m67xx.o(.text.SystemInit) for SystemInit
    startup_cms32m67xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_cms32m67xx.o(.ARM.exidx.text.CLK_GetHocoFreq) refers to system_cms32m67xx.o(.text.CLK_GetHocoFreq) for [Anonymous Symbol]
    system_cms32m67xx.o(.text.SystemCoreClockUpdate) refers to system_cms32m67xx.o(.text.CLK_GetHocoFreq) for CLK_GetHocoFreq
    system_cms32m67xx.o(.text.SystemCoreClockUpdate) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_cms32m67xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_cms32m67xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_cms32m67xx.o(.text.SystemInit) refers to system_cms32m67xx.o(.text.CLK_GetHocoFreq) for CLK_GetHocoFreq
    system_cms32m67xx.o(.text.SystemInit) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_cms32m67xx.o(.ARM.exidx.text.SystemInit) refers to system_cms32m67xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_cms32m67xx.o(.text.LVI_IRQHandler) refers to system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    system_cms32m67xx.o(.ARM.exidx.text.LVI_IRQHandler) refers to system_cms32m67xx.o(.text.LVI_IRQHandler) for [Anonymous Symbol]
    system_cms32m67xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_cms32m67xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_cms32m67xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing init_config.o(.text), (0 bytes).
    Removing init_config.o(.ARM.exidx.text.Init_Cinfig), (8 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.text.fputc), (44 bytes).
    Removing retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget.o(.text.fgetc), (36 bytes).
    Removing retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget.o(.text._sys_exit), (8 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing retarget.o(.bss.__stdout), (84 bytes).
    Removing retarget.o(.bss.__stdin), (84 bytes).
    Removing ym_ccp.o(.text), (0 bytes).
    Removing ym_ccp.o(.text.CCP_Int_Config), (72 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.CCP_Int_Config), (8 bytes).
    Removing ym_ccp.o(.text.__NVIC_SetPriority), (132 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing ym_ccp.o(.text.__NVIC_EnableIRQ), (44 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing ym_ccp.o(.text.__NVIC_DisableIRQ), (52 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing ym_ccp.o(.text.Pmn_AF_CCP0x_Disable), (80 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.Pmn_AF_CCP0x_Disable), (8 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.CCP0A_Init_Config), (8 bytes).
    Removing ym_ccp.o(.text.CCP_Config_as_LED_B_Breath), (112 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.CCP_Config_as_LED_B_Breath), (8 bytes).
    Removing ym_ccp.o(.text.Set_LED_B), (72 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.Set_LED_B), (8 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.CCP_IRQHandler), (8 bytes).
    Removing ym_ccp.o(.bss.LED5TestVal), (2 bytes).
    Removing ym_dma.o(.text), (0 bytes).
    Removing ym_dma.o(.ARM.exidx.text.DMA_CCP0A_Config), (8 bytes).
    Removing ym_dma.o(.data.test), (96 bytes).
    Removing ym_rgb.o(.text), (0 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Mode_Set), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Mode_Update), (8 bytes).
    Removing ym_rgb.o(.text.RGB_Color_Set), (28 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Color_Set), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Color_Update), (8 bytes).
    Removing ym_rgb.o(.text.RGB_ColorRGB_Set), (24 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_ColorRGB_Set), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_ColorRGB_Update), (8 bytes).
    Removing ym_rgb.o(.text.RGB_Power_Set), (28 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Power_Set), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Power_Update), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.Update_Hook), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Breath_Update), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.get_white_breathRGB), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.get_RGB_GRB_Camplar), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Status_Update), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Init_Config), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_DataInit), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.get_CamplarBuff), (8 bytes).
    Removing ym_timer.o(.text), (0 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TMR0_Int_Config), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TMR1_Int_Config), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TIMER0_Init_Config), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TIMER1_Init_Config), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TIMER0_IRQHandler), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TIMER1_IRQHandler), (8 bytes).
    Removing ym_uart.o(.text), (0 bytes).
    Removing ym_uart.o(.ARM.exidx.text.UART1_Init_Config), (8 bytes).
    Removing ym_uart.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing ym_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing ym_uart.o(.ARM.exidx.text.get_Uart1_RxData), (8 bytes).
    Removing ym_uart.o(.ARM.exidx.text.UART1_IRQHandler), (8 bytes).
    Removing ym_epwm.o(.text), (0 bytes).
    Removing ym_epwm.o(.ARM.exidx.text.EPWM_Init_Config), (8 bytes).
    Removing ym_epwm.o(.ARM.exidx.text.EPWM_IRQHandler), (8 bytes).
    Removing bsp_systick.o(.text), (0 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.Systick_Init_Config), (8 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing bsp_systick.o(.text.SysTick_Delay_us), (88 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Delay_us), (8 bytes).
    Removing bsp_systick.o(.text.SysTick_Delay_ms), (88 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Delay_ms), (8 bytes).
    Removing bsp_systick.o(.text.Delay_us), (48 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.Delay_us), (8 bytes).
    Removing bsp_systick.o(.text.Delay_ms), (52 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.Delay_ms), (8 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing sys_optionbyte.o(.text), (0 bytes).
    Removing sys_optionbyte.o(ram_fetch_code), (248 bytes).
    Removing sys_optionbyte.o(.ARM.exidxram_fetch_code), (8 bytes).
    Removing ym_gpio.o(.text), (0 bytes).
    Removing ym_gpio.o(.ARM.exidx.text.LED_Init_Config), (8 bytes).
    Removing ym_gpio.o(.ARM.exidx.text.GPIO_Init_Config), (8 bytes).
    Removing ym_gpio.o(.ARM.exidx.text.KEY_Init_Config), (8 bytes).
    Removing ym_gpio.o(.ARM.exidx.text.Touch_Init_Config), (8 bytes).
    Removing dma.o(.text), (0 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Start), (8 bytes).
    Removing dma.o(.text.DMA_Stop), (44 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Stop), (8 bytes).
    Removing dma.o(.text.DMA_Trigger), (52 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Trigger), (8 bytes).
    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.text.delay1_us), (60 bytes).
    Removing delay.o(.ARM.exidx.text.delay1_us), (8 bytes).
    Removing delay.o(.text.m0_delay_ms), (36 bytes).
    Removing delay.o(.ARM.exidx.text.m0_delay_ms), (8 bytes).
    Removing delay.o(.text.m0_delay_us), (16 bytes).
    Removing delay.o(.ARM.exidx.text.m0_delay_us), (8 bytes).
    Removing delay.o(.text.delay_init), (32 bytes).
    Removing delay.o(.ARM.exidx.text.delay_init), (8 bytes).
    Removing delay.o(.bss.Value_us), (1 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_SetBit), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_ClrBit), (8 bytes).
    Removing gpio.o(.text.PORT_ToggleBit), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_ToggleBit), (8 bytes).
    Removing gpio.o(.text.PORT_GetBit), (56 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_GetBit), (8 bytes).
    Removing gpio.o(.text.PORT_GetBitValue), (80 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_GetBitValue), (8 bytes).
    Removing gpio.o(.text.PORT_PullUp), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_PullUp), (8 bytes).
    Removing gpio.o(.text.PORT_PullDown), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_PullDown), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing gpio.o(.text.RESTPinGpio_Set), (40 bytes).
    Removing gpio.o(.ARM.exidx.text.RESTPinGpio_Set), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_Start), (8 bytes).
    Removing timer.o(.text.TMR_Stop), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_Stop), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_ConfigRunMode), (8 bytes).
    Removing timer.o(.text.TMR_EnableOneShotMode), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_EnableOneShotMode), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_DisableOneShotMode), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_ConfigClk), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_SetPeriod), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_EnableOverflowInt), (8 bytes).
    Removing timer.o(.text.TMR_DisableOverflowInt), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_DisableOverflowInt), (8 bytes).
    Removing timer.o(.text.TMR_GetOverflowIntFlag), (16 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_GetOverflowIntFlag), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_ClearOverflowIntFlag), (8 bytes).
    Removing timer.o(.text.TMR_GetTimingData), (12 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_GetTimingData), (8 bytes).
    Removing ccp.o(.text), (0 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_Start), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_Stop), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCLK), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableRun), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableRun), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnablePWMMode), (8 bytes).
    Removing ccp.o(.text.CCP_EnablePWMHalfCycleMode), (144 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnablePWMHalfCycleMode), (8 bytes).
    Removing ccp.o(.text.CCP_DisablePWMHalfCycleMode), (144 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisablePWMHalfCycleMode), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCompare), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableReverseOutput), (8 bytes).
    Removing ccp.o(.text.CCP_DisableReverseOutput), (148 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableReverseOutput), (8 bytes).
    Removing ccp.o(.text.CCP_EnableOverflowInt), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableOverflowInt), (8 bytes).
    Removing ccp.o(.text.CCP_DisableOverflowInt), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableOverflowInt), (8 bytes).
    Removing ccp.o(.text.CCP_GetOverflowIntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetOverflowIntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearOverflowIntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearOverflowIntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCompareInt), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCompareInt), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCompareInt), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCompareInt), (8 bytes).
    Removing ccp.o(.text.CCP_GetCompareIntFlag), (24 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCompareIntFlag), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCompareIntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode0), (88 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0), (8 bytes).
    Removing ccp.o(.text.CCP_ConfigCAPMode0), (92 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode0), (8 bytes).
    Removing ccp.o(.text.CCP_SelCAPMode0Channel), (96 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_SelCAPMode0Channel), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode0Result), (124 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode0Result), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode0Int), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0Int), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode0Int), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode0Int), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode0IntFlag), (24 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode0IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearCAPMode0IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCAPMode0IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode1), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode1), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPnReload), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPnReload), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPnReload), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPnReload), (8 bytes).
    Removing ccp.o(.text.CCP_ConfigCAPMode1), (60 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode1), (8 bytes).
    Removing ccp.o(.text.CCP_SelCAPMode1Channel), (460 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_SelCAPMode1Channel), (8 bytes).
    Removing ccp.o(.text.CCP_TriggerCaputer), (116 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_TriggerCaputer), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode1Result), (24 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode1Result), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode1Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1Int), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode1Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1Int), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode1IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode1IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearCAPMode1IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCAPMode1IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode2), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode2), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2), (8 bytes).
    Removing ccp.o(.text.CCP_ConfigCAPMode2), (60 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode2), (8 bytes).
    Removing ccp.o(.text.CCP_SelCAPMode2Channel), (148 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_SelCAPMode2Channel), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode2Result), (112 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode2Result), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode2Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2Int), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode2Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2Int), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode2IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode2IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearCAPMode2IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCAPMode2IntFlag), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ConfigRunMode), (8 bytes).
    Removing uart.o(.text.UART_WriteTHR), (16 bytes).
    Removing uart.o(.ARM.exidx.text.UART_WriteTHR), (8 bytes).
    Removing uart.o(.text.UART_ReadRBR), (12 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ReadRBR), (8 bytes).
    Removing uart.o(.text.UART_EnableRxLineInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableRxLineInt), (8 bytes).
    Removing uart.o(.text.UART_DisableRxLineInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableRxLineInt), (8 bytes).
    Removing uart.o(.text.UART_EnableTHREInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableTHREInt), (8 bytes).
    Removing uart.o(.text.UART_DisableTHREInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableTHREInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableRBRInt), (8 bytes).
    Removing uart.o(.text.UART_DisableRBRInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableRBRInt), (8 bytes).
    Removing uart.o(.text.UART_Lock), (14 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Lock), (8 bytes).
    Removing cgc.o(.text), (0 bytes).
    Removing cgc.o(.text.CGC_PER0PeriphClockCmd), (52 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER0PeriphClockCmd), (8 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER10PeriphClockCmd), (8 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER11PeriphClockCmd), (8 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER12PeriphClockCmd), (8 bytes).
    Removing cgc.o(.text.CGC_PER13PeriphClockCmd), (48 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER13PeriphClockCmd), (8 bytes).
    Removing cgc.o(.text.CGC_LSI_Enable), (12 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSI_Enable), (8 bytes).
    Removing cgc.o(.text.CGC_LSI_Disable), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSI_Disable), (8 bytes).
    Removing cgc.o(.text.CGC_LSI_CFG_AS_FCLK), (48 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSI_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_HSI_CFG_AS_FCLK), (52 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_HSI_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_HSE_CFG_AS_FCLK), (60 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_HSE_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_CFG_AS_FCLK), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_HSE_Disable), (12 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_HSE_Disable), (8 bytes).
    Removing cgc.o(.text.CGC_OSC_Selet), (44 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_OSC_Selet), (8 bytes).
    Removing cgc.o(.text.CGC_SLEEP_Selet), (44 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_SLEEP_Selet), (8 bytes).
    Removing cgc.o(.text.CGC_Hoco_Stop), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_Hoco_Stop), (8 bytes).
    Removing cgc.o(.text.CGC_Hoco_Start), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_Hoco_Start), (8 bytes).
    Removing cgc.o(.text.CGC_LSITIMERCLK_Enable), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSITIMERCLK_Enable), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Enable), (32 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Enable), (8 bytes).
    Removing cgc.o(.text.CGC_MCLK_Status), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_MCLK_Status), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Disable), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Disable), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Sel), (52 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Sel), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Multi), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Multi), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Div), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Div), (8 bytes).
    Removing cgc.o(.text.CGC_MCLK_PLLSel), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_MCLK_PLLSel), (8 bytes).
    Removing cgc.o(.text.Reset_Status_Get), (112 bytes).
    Removing cgc.o(.ARM.exidx.text.Reset_Status_Get), (8 bytes).
    Removing cgc.o(.bss.USE_HSE_SYSTYEM_CLOCK), (1 bytes).
    Removing cgc.o(.bss.USE_HSI_SYSTYEM_CLOCK), (1 bytes).
    Removing cgc.o(.bss.USE_LSE_SYSTYEM_CLOCK), (1 bytes).
    Removing cgc.o(.bss.USE_LSI_SYSTYEM_CLOCK), (1 bytes).
    Removing epwm.o(.text), (0 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigRunMode), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelClk), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelPeriod), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelSymDuty), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigChannelAsymDuty), (68 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelAsymDuty), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableOneShotMode), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableOneShotMode), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableAutoLoadMode), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigLoadAndIntMode), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableEventLoad), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableEventLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableReverseOutput), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableReverseOutput), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableReverseOutput), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableDeadZone), (448 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableDeadZone), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableDeadZone), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableChannelRemap), (68 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableChannelRemap), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableChannelRemap), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableChannelRemap), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableOutput), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableOutput), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableOutput), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_Start), (8 bytes).
    Removing epwm.o(.text.EPWM_Stop), (52 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_Stop), (8 bytes).
    Removing epwm.o(.text.EPWM_ForceStop), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ForceStop), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableMaskPreload), (52 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableMaskPreload), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableMaskPreload), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableMaskPreload), (8 bytes).
    Removing epwm.o(.text.EPWM_WriteMaskBuffer), (64 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_WriteMaskBuffer), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableMaskOutPut), (92 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableMaskOutPut), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableMaskOutPut), (56 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableMaskOutPut), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigCompareTriger), (56 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigCompareTriger), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableHall), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableHall), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableHall), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableHall), (8 bytes).
    Removing epwm.o(.text.EPWM_GetHallState), (20 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetHallState), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearHallErrorState), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorState), (8 bytes).
    Removing epwm.o(.text.EPWM_AllBrakeEnable), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_AllBrakeEnable), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_AllBrakeDisable), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeMode), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeMode), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeRecoverDelay), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverDelay), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeRecoverLoad), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableFaultBrake), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableFaultBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableFaultBrake), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableFaultBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigFaultBrakeLevel), (64 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigFaultBrakeLevel), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableEXTLEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableEXTLEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableEXTEEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableEXTEEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeFilter), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeFilter), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableACMP0LEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableACMP0LEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableACMP1LEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableACMP1LEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableSoftwareBrake), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableSoftwareBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableSoftwareBrake), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableSoftwareBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableBrakeInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableBrakeInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableBrakeInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableBrakeInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetBrakeIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetBrakeIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearBrakeIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearBrakeIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_GetBrakeFlag), (20 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetBrakeFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearBrake), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableHallErrorInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableHallErrorInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableHallErrorInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableHallErrorInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetHallErrorIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetHallErrorIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearHallErrorIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableUpCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableUpCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableUpCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableUpCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetUpCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetUpCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearUpCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearUpCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableDownCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableDownCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableDownCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableDownCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetDownCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetDownCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearDownCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearDownCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnablePeriodInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnablePeriodInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisablePeriodInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisablePeriodInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetPeriodIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetPeriodIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearPeriodIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearPeriodIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableZeroInt), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableZeroInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableZeroInt), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableZeroInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetZeroIntFlag), (24 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetZeroIntFlag), (8 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearZeroIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableCountCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableCountCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableCountCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableCountCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetCountCmpIntFlag), (24 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetCountCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearCountCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearCountCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableBrakeIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableBrakeIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableBrakeIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableBrakeIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeIntSum), (52 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableZeroIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableZeroIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableZeroIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableZeroIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigZeroIntSum), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigZeroIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableIntAccompanyWithLoad), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableIntAccompanyWithLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableIntAccompanyWithLoad), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableIntAccompanyWithLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableDebugSuspend), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableDebugSuspend), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableDebugSuspend), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableDebugSuspend), (8 bytes).
    Removing flash.o(.text), (0 bytes).
    Removing flash.o(ram_fetch_code), (940 bytes).
    Removing flash.o(.ARM.exidxram_fetch_code), (40 bytes).
    Removing userlib.o(.text), (0 bytes).
    Removing userlib.o(.text.limit_int8), (124 bytes).
    Removing userlib.o(.ARM.exidx.text.limit_int8), (8 bytes).
    Removing userlib.o(.ARM.exidx.text.limit_int16), (8 bytes).
    Removing userlib.o(.text.limit_int32), (84 bytes).
    Removing userlib.o(.ARM.exidx.text.limit_int32), (8 bytes).
    Removing userlib.o(.text.limit_uint8), (116 bytes).
    Removing userlib.o(.ARM.exidx.text.limit_uint8), (8 bytes).
    Removing userlib.o(.text.limit_uint16), (116 bytes).
    Removing userlib.o(.ARM.exidx.text.limit_uint16), (8 bytes).
    Removing userlib.o(.text.limit_uint32), (84 bytes).
    Removing userlib.o(.ARM.exidx.text.limit_uint32), (8 bytes).
    Removing userlib.o(.text.limit_float), (96 bytes).
    Removing userlib.o(.ARM.exidx.text.limit_float), (8 bytes).
    Removing userlib.o(.text.int8_deadline), (108 bytes).
    Removing userlib.o(.ARM.exidx.text.int8_deadline), (8 bytes).
    Removing userlib.o(.text.int16_deadline), (108 bytes).
    Removing userlib.o(.ARM.exidx.text.int16_deadline), (8 bytes).
    Removing userlib.o(.text.int32_deadline), (72 bytes).
    Removing userlib.o(.ARM.exidx.text.int32_deadline), (8 bytes).
    Removing userlib.o(.text.uint8_deadline), (100 bytes).
    Removing userlib.o(.ARM.exidx.text.uint8_deadline), (8 bytes).
    Removing userlib.o(.text.uint16_deadline), (100 bytes).
    Removing userlib.o(.ARM.exidx.text.uint16_deadline), (8 bytes).
    Removing userlib.o(.text.uint32_deadline), (72 bytes).
    Removing userlib.o(.ARM.exidx.text.uint32_deadline), (8 bytes).
    Removing userlib.o(.text.float_deadline), (84 bytes).
    Removing userlib.o(.ARM.exidx.text.float_deadline), (8 bytes).
    Removing userlib.o(.bss.limit_int8.change), (1 bytes).
    Removing userlib.o(.bss.limit_int32.change), (4 bytes).
    Removing userlib.o(.bss.limit_uint8.change), (1 bytes).
    Removing userlib.o(.bss.limit_uint16.change), (2 bytes).
    Removing userlib.o(.bss.limit_uint32.change), (4 bytes).
    Removing userlib.o(.bss.limit_float.change), (4 bytes).
    Removing userlib.o(.bss.int8_deadline.change), (1 bytes).
    Removing userlib.o(.bss.int16_deadline.change), (2 bytes).
    Removing userlib.o(.bss.int32_deadline.change), (4 bytes).
    Removing userlib.o(.bss.uint8_deadline.change), (1 bytes).
    Removing userlib.o(.bss.uint16_deadline.change), (2 bytes).
    Removing userlib.o(.bss.uint32_deadline.change), (4 bytes).
    Removing userlib.o(.bss.float_deadline.change), (4 bytes).
    Removing startup_cms32m67xx.o(HEAP), (256 bytes).
    Removing system_cms32m67xx.o(.text), (0 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.CLK_GetHocoFreq), (8 bytes).
    Removing system_cms32m67xx.o(.text.SystemCoreClockUpdate), (16 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.LVI_IRQHandler), (8 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing system_cms32m67xx.o(.data.SystemAPBClock), (4 bytes).
    Removing system_cms32m67xx.o(.data.CyclesPerUs), (4 bytes).
    Removing fcmple.o(.text), (28 bytes).
    Removing fcmpge.o(.text), (28 bytes).

519 unused section(s) (total 13739 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpge.o ABSOLUTE
    RTE/Device/CMS32M67xx32NB/startup_CMS32M67xx.s 0x00000000   Number         0  startup_cms32m67xx.o ABSOLUTE
    Sys_OptionByte.c                         0x00000000   Number         0  sys_optionbyte.o ABSOLUTE
    YM_ccp.c                                 0x00000000   Number         0  ym_ccp.o ABSOLUTE
    YM_dma.c                                 0x00000000   Number         0  ym_dma.o ABSOLUTE
    YM_epwm.c                                0x00000000   Number         0  ym_epwm.o ABSOLUTE
    YM_gpio.c                                0x00000000   Number         0  ym_gpio.o ABSOLUTE
    YM_rgb.c                                 0x00000000   Number         0  ym_rgb.o ABSOLUTE
    YM_timer.c                               0x00000000   Number         0  ym_timer.o ABSOLUTE
    YM_uart.c                                0x00000000   Number         0  ym_uart.o ABSOLUTE
    bsp_SysTick.c                            0x00000000   Number         0  bsp_systick.o ABSOLUTE
    ccp.c                                    0x00000000   Number         0  ccp.o ABSOLUTE
    cgc.c                                    0x00000000   Number         0  cgc.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    dma.c                                    0x00000000   Number         0  dma.o ABSOLUTE
    epwm.c                                   0x00000000   Number         0  epwm.o ABSOLUTE
    flash.c                                  0x00000000   Number         0  flash.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    init_config.c                            0x00000000   Number         0  init_config.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    system_CMS32M67xx.c                      0x00000000   Number         0  system_cms32m67xx.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    userlib.c                                0x00000000   Number         0  userlib.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_cms32m67xx.o(RESET)
    __tagsym$$used.0                         0x000000c0   Number         0  system_cms32m67xx.o(.ARM.__AT_0x000000C0)
    .ARM.Collect$$$$00000000                 0x000000c4   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c4   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c8   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000cc   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000cc   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000cc   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d4   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d4   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d4   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d4   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d8   Section       32  startup_cms32m67xx.o(.text)
    .text                                    0x000000f8   Section        0  uidiv_div0.o(.text)
    .text                                    0x00000138   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x0000015c   Section        0  ym_ccp.o(.text.CCP0A_Init_Config)
    __arm_cp.5_0                             0x000001c0   Number         4  ym_ccp.o(.text.CCP0A_Init_Config)
    [Anonymous Symbol]                       0x000001c4   Section        0  ccp.o(.text.CCP_ClearCompareIntFlag)
    __arm_cp.18_0                            0x000001dc   Number         4  ccp.o(.text.CCP_ClearCompareIntFlag)
    [Anonymous Symbol]                       0x000001e0   Section        0  ccp.o(.text.CCP_ConfigCLK)
    __arm_cp.2_2                             0x0000024c   Number         4  ccp.o(.text.CCP_ConfigCLK)
    __arm_cp.2_4                             0x00000250   Number         4  ccp.o(.text.CCP_ConfigCLK)
    [Anonymous Symbol]                       0x00000254   Section        0  ccp.o(.text.CCP_ConfigCompare)
    __arm_cp.8_3                             0x000002f0   Number         4  ccp.o(.text.CCP_ConfigCompare)
    __arm_cp.8_4                             0x000002f4   Number         4  ccp.o(.text.CCP_ConfigCompare)
    [Anonymous Symbol]                       0x000002f8   Section        0  ccp.o(.text.CCP_DisableRun)
    [Anonymous Symbol]                       0x00000318   Section        0  ccp.o(.text.CCP_EnablePWMMode)
    [Anonymous Symbol]                       0x00000354   Section        0  ccp.o(.text.CCP_EnableReverseOutput)
    __arm_cp.9_2                             0x000003d8   Number         4  ccp.o(.text.CCP_EnableReverseOutput)
    [Anonymous Symbol]                       0x000003dc   Section        0  ccp.o(.text.CCP_EnableRun)
    __arm_cp.3_1                             0x000003fc   Number         4  ccp.o(.text.CCP_EnableRun)
    [Anonymous Symbol]                       0x00000400   Section        0  ym_ccp.o(.text.CCP_IRQHandler)
    __arm_cp.8_1                             0x000004b0   Number         4  ym_ccp.o(.text.CCP_IRQHandler)
    __arm_cp.8_2                             0x000004b4   Number         4  ym_ccp.o(.text.CCP_IRQHandler)
    __arm_cp.8_3                             0x000004b8   Number         4  ym_ccp.o(.text.CCP_IRQHandler)
    __arm_cp.8_4                             0x000004bc   Number         4  ym_ccp.o(.text.CCP_IRQHandler)
    __arm_cp.8_5                             0x000004c0   Number         4  ym_ccp.o(.text.CCP_IRQHandler)
    [Anonymous Symbol]                       0x000004c4   Section        0  ccp.o(.text.CCP_Start)
    [Anonymous Symbol]                       0x00000500   Section        0  ccp.o(.text.CCP_Stop)
    __arm_cp.1_0                             0x0000053c   Number         4  ccp.o(.text.CCP_Stop)
    __arm_cp.1_1                             0x00000540   Number         4  ccp.o(.text.CCP_Stop)
    __arm_cp.1_2                             0x00000544   Number         4  ccp.o(.text.CCP_Stop)
    [Anonymous Symbol]                       0x00000548   Section        0  cgc.o(.text.CGC_PER10PeriphClockCmd)
    __arm_cp.1_0                             0x00000578   Number         4  cgc.o(.text.CGC_PER10PeriphClockCmd)
    [Anonymous Symbol]                       0x0000057c   Section        0  cgc.o(.text.CGC_PER11PeriphClockCmd)
    __arm_cp.2_0                             0x000005a8   Number         4  cgc.o(.text.CGC_PER11PeriphClockCmd)
    [Anonymous Symbol]                       0x000005ac   Section        0  cgc.o(.text.CGC_PER12PeriphClockCmd)
    __arm_cp.3_0                             0x000005d8   Number         4  cgc.o(.text.CGC_PER12PeriphClockCmd)
    [Anonymous Symbol]                       0x000005dc   Section        0  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_0                             0x000006ac   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_1                             0x000006b0   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_2                             0x000006b4   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_3                             0x000006b8   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_4                             0x000006bc   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_5                             0x000006c0   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_6                             0x000006c4   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_7                             0x000006c8   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_8                             0x000006cc   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_9                             0x000006d0   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_10                            0x000006d4   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_11                            0x000006d8   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_12                            0x000006dc   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    [Anonymous Symbol]                       0x000006e0   Section        0  ym_dma.o(.text.DMA_CCP0A_Config)
    __arm_cp.0_0                             0x00000728   Number         4  ym_dma.o(.text.DMA_CCP0A_Config)
    __arm_cp.0_1                             0x0000072c   Number         4  ym_dma.o(.text.DMA_CCP0A_Config)
    __arm_cp.0_2                             0x00000730   Number         4  ym_dma.o(.text.DMA_CCP0A_Config)
    __arm_cp.0_3                             0x00000734   Number         4  ym_dma.o(.text.DMA_CCP0A_Config)
    [Anonymous Symbol]                       0x00000738   Section        0  dma.o(.text.DMA_Init)
    __arm_cp.0_0                             0x00000824   Number         4  dma.o(.text.DMA_Init)
    __arm_cp.0_1                             0x00000828   Number         4  dma.o(.text.DMA_Init)
    __arm_cp.0_2                             0x0000082c   Number         4  dma.o(.text.DMA_Init)
    __arm_cp.0_3                             0x00000830   Number         4  dma.o(.text.DMA_Init)
    __arm_cp.0_4                             0x00000834   Number         4  dma.o(.text.DMA_Init)
    __arm_cp.0_5                             0x00000838   Number         4  dma.o(.text.DMA_Init)
    __arm_cp.0_6                             0x0000083c   Number         4  dma.o(.text.DMA_Init)
    __arm_cp.0_7                             0x00000840   Number         4  dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x00000844   Section        0  dma.o(.text.DMA_Start)
    __arm_cp.1_0                             0x0000086c   Number         4  dma.o(.text.DMA_Start)
    [Anonymous Symbol]                       0x00000870   Section        0  epwm.o(.text.EPWM_AllBrakeDisable)
    __arm_cp.31_1                            0x00000888   Number         4  epwm.o(.text.EPWM_AllBrakeDisable)
    [Anonymous Symbol]                       0x0000088c   Section        0  epwm.o(.text.EPWM_ClearZeroIntFlag)
    __arm_cp.70_0                            0x000008a4   Number         4  epwm.o(.text.EPWM_ClearZeroIntFlag)
    [Anonymous Symbol]                       0x000008a8   Section        0  epwm.o(.text.EPWM_ConfigChannelClk)
    __arm_cp.1_1                             0x000008e0   Number         4  epwm.o(.text.EPWM_ConfigChannelClk)
    __arm_cp.1_2                             0x000008e4   Number         4  epwm.o(.text.EPWM_ConfigChannelClk)
    __arm_cp.1_3                             0x000008e8   Number         4  epwm.o(.text.EPWM_ConfigChannelClk)
    [Anonymous Symbol]                       0x000008ec   Section        0  epwm.o(.text.EPWM_ConfigChannelPeriod)
    __arm_cp.2_1                             0x0000091c   Number         4  epwm.o(.text.EPWM_ConfigChannelPeriod)
    [Anonymous Symbol]                       0x00000920   Section        0  epwm.o(.text.EPWM_ConfigChannelSymDuty)
    __arm_cp.3_1                             0x0000096c   Number         4  epwm.o(.text.EPWM_ConfigChannelSymDuty)
    [Anonymous Symbol]                       0x00000970   Section        0  epwm.o(.text.EPWM_ConfigLoadAndIntMode)
    __arm_cp.7_1                             0x000009a8   Number         4  epwm.o(.text.EPWM_ConfigLoadAndIntMode)
    [Anonymous Symbol]                       0x000009ac   Section        0  epwm.o(.text.EPWM_ConfigRunMode)
    [Anonymous Symbol]                       0x000009d4   Section        0  epwm.o(.text.EPWM_DisableDeadZone)
    [Anonymous Symbol]                       0x00000a5c   Section        0  epwm.o(.text.EPWM_DisableReverseOutput)
    [Anonymous Symbol]                       0x00000a7c   Section        0  epwm.o(.text.EPWM_EnableAutoLoadMode)
    __arm_cp.6_1                             0x00000a98   Number         4  epwm.o(.text.EPWM_EnableAutoLoadMode)
    [Anonymous Symbol]                       0x00000a9c   Section        0  epwm.o(.text.EPWM_EnableOutput)
    __arm_cp.15_0                            0x00000ab8   Number         4  epwm.o(.text.EPWM_EnableOutput)
    __arm_cp.15_1                            0x00000abc   Number         4  epwm.o(.text.EPWM_EnableOutput)
    [Anonymous Symbol]                       0x00000ac0   Section        0  ym_epwm.o(.text.EPWM_IRQHandler)
    [Anonymous Symbol]                       0x00000adc   Section        0  ym_epwm.o(.text.EPWM_Init_Config)
    __arm_cp.0_0                             0x00000c6c   Number         4  ym_epwm.o(.text.EPWM_Init_Config)
    __arm_cp.0_1                             0x00000c70   Number         4  ym_epwm.o(.text.EPWM_Init_Config)
    __arm_cp.0_2                             0x00000c74   Number         4  ym_epwm.o(.text.EPWM_Init_Config)
    __arm_cp.0_3                             0x00000c78   Number         4  ym_epwm.o(.text.EPWM_Init_Config)
    __arm_cp.0_4                             0x00000c7c   Number         4  ym_epwm.o(.text.EPWM_Init_Config)
    __arm_cp.0_5                             0x00000c80   Number         4  ym_epwm.o(.text.EPWM_Init_Config)
    [Anonymous Symbol]                       0x00000c84   Section        0  epwm.o(.text.EPWM_Start)
    __arm_cp.17_0                            0x00000ca0   Number         4  epwm.o(.text.EPWM_Start)
    __arm_cp.17_1                            0x00000ca4   Number         4  epwm.o(.text.EPWM_Start)
    [Anonymous Symbol]                       0x00000ca8   Section        0  gpio.o(.text.GPIO_Init)
    __arm_cp.7_0                             0x00000e64   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_1                             0x00000e68   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_2                             0x00000e6c   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_3                             0x00000e70   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_4                             0x00000e74   Number         4  gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x00000e78   Section        0  ym_gpio.o(.text.GPIO_Init_Config)
    [Anonymous Symbol]                       0x00000e96   Section        0  init_config.o(.text.Init_Cinfig)
    [Anonymous Symbol]                       0x00000ece   Section        0  ym_gpio.o(.text.KEY_Init_Config)
    [Anonymous Symbol]                       0x00000eec   Section        0  ym_gpio.o(.text.LED_Init_Config)
    [Anonymous Symbol]                       0x00000f5a   Section        0  system_cms32m67xx.o(.text.LVI_IRQHandler)
    [Anonymous Symbol]                       0x00000f64   Section        0  gpio.o(.text.PORT_ClrBit)
    __arm_cp.1_0                             0x00000f8c   Number         4  gpio.o(.text.PORT_ClrBit)
    [Anonymous Symbol]                       0x00000f90   Section        0  gpio.o(.text.PORT_SetBit)
    __arm_cp.0_0                             0x00000fb4   Number         4  gpio.o(.text.PORT_SetBit)
    [Anonymous Symbol]                       0x00000fb8   Section        0  ym_rgb.o(.text.RGB_Breath_Update)
    [Anonymous Symbol]                       0x00001030   Section        0  ym_rgb.o(.text.RGB_ColorRGB_Update)
    [Anonymous Symbol]                       0x00001064   Section        0  ym_rgb.o(.text.RGB_Color_Update)
    RGB_DataInit                             0x000010f5   Thumb Code    68  ym_rgb.o(.text.RGB_DataInit)
    [Anonymous Symbol]                       0x000010f4   Section        0  ym_rgb.o(.text.RGB_DataInit)
    __arm_cp.14_0                            0x00001138   Number         4  ym_rgb.o(.text.RGB_DataInit)
    [Anonymous Symbol]                       0x0000113c   Section        0  ym_rgb.o(.text.RGB_Init_Config)
    [Anonymous Symbol]                       0x00001160   Section        0  ym_rgb.o(.text.RGB_Mode_Set)
    [Anonymous Symbol]                       0x00001178   Section        0  ym_rgb.o(.text.RGB_Mode_Update)
    __arm_cp.1_0                             0x00001238   Number         4  ym_rgb.o(.text.RGB_Mode_Update)
    __arm_cp.1_1                             0x0000123c   Number         4  ym_rgb.o(.text.RGB_Mode_Update)
    __arm_cp.1_2                             0x00001240   Number         4  ym_rgb.o(.text.RGB_Mode_Update)
    [Anonymous Symbol]                       0x00001244   Section        0  ym_rgb.o(.text.RGB_Power_Update)
    [Anonymous Symbol]                       0x00001288   Section        0  ym_rgb.o(.text.RGB_Status_Update)
    SysTick_Config                           0x000012b9   Thumb Code    68  bsp_systick.o(.text.SysTick_Config)
    [Anonymous Symbol]                       0x000012b8   Section        0  bsp_systick.o(.text.SysTick_Config)
    __arm_cp.1_0                             0x000012fc   Number         4  bsp_systick.o(.text.SysTick_Config)
    __arm_cp.1_1                             0x00001300   Number         4  bsp_systick.o(.text.SysTick_Config)
    __arm_cp.1_2                             0x00001304   Number         4  bsp_systick.o(.text.SysTick_Config)
    [Anonymous Symbol]                       0x00001308   Section        0  bsp_systick.o(.text.SysTick_Handler)
    __arm_cp.6_0                             0x00001320   Number         4  bsp_systick.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001324   Section        0  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_0                             0x00001390   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_1                             0x00001394   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_2                             0x00001398   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_3                             0x0000139c   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_4                             0x000013a0   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_5                             0x000013a4   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_9                             0x000013a8   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_10                            0x000013ac   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_11                            0x000013b0   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_12                            0x000013b4   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_13                            0x000013b8   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_14                            0x000013bc   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_15                            0x000013c0   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_16                            0x000013c4   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_17                            0x000013c8   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_18                            0x000013cc   Number         4  system_cms32m67xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000013d0   Section        0  bsp_systick.o(.text.Systick_Init_Config)
    __arm_cp.0_1                             0x000013ec   Number         4  bsp_systick.o(.text.Systick_Init_Config)
    [Anonymous Symbol]                       0x000013f0   Section        0  ym_timer.o(.text.TIMER0_IRQHandler)
    [Anonymous Symbol]                       0x000013fc   Section        0  ym_timer.o(.text.TIMER0_Init_Config)
    [Anonymous Symbol]                       0x0000143c   Section        0  ym_timer.o(.text.TIMER1_IRQHandler)
    __arm_cp.7_1                             0x00001460   Number         4  ym_timer.o(.text.TIMER1_IRQHandler)
    [Anonymous Symbol]                       0x00001464   Section        0  ym_timer.o(.text.TIMER1_Init_Config)
    __arm_cp.5_1                             0x000014a0   Number         4  ym_timer.o(.text.TIMER1_Init_Config)
    [Anonymous Symbol]                       0x000014a4   Section        0  ym_timer.o(.text.TMR0_Int_Config)
    __arm_cp.0_0                             0x000014cc   Number         4  ym_timer.o(.text.TMR0_Int_Config)
    [Anonymous Symbol]                       0x000014d0   Section        0  ym_timer.o(.text.TMR1_Int_Config)
    __arm_cp.3_0                             0x000014f8   Number         4  ym_timer.o(.text.TMR1_Int_Config)
    [Anonymous Symbol]                       0x000014fc   Section        0  timer.o(.text.TMR_ClearOverflowIntFlag)
    [Anonymous Symbol]                       0x0000150c   Section        0  timer.o(.text.TMR_ConfigClk)
    [Anonymous Symbol]                       0x0000152a   Section        0  timer.o(.text.TMR_ConfigRunMode)
    [Anonymous Symbol]                       0x0000154e   Section        0  timer.o(.text.TMR_DisableOneShotMode)
    [Anonymous Symbol]                       0x00001560   Section        0  timer.o(.text.TMR_EnableOverflowInt)
    [Anonymous Symbol]                       0x00001572   Section        0  timer.o(.text.TMR_SetPeriod)
    [Anonymous Symbol]                       0x00001582   Section        0  timer.o(.text.TMR_Start)
    [Anonymous Symbol]                       0x00001594   Section        0  ym_gpio.o(.text.Touch_Init_Config)
    [Anonymous Symbol]                       0x000015a4   Section        0  ym_uart.o(.text.UART1_IRQHandler)
    __arm_cp.4_1                             0x000015c8   Number         4  ym_uart.o(.text.UART1_IRQHandler)
    __arm_cp.4_2                             0x000015cc   Number         4  ym_uart.o(.text.UART1_IRQHandler)
    [Anonymous Symbol]                       0x000015d0   Section        0  ym_uart.o(.text.UART1_Init_Config)
    __arm_cp.0_0                             0x0000161c   Number         4  ym_uart.o(.text.UART1_Init_Config)
    __arm_cp.0_1                             0x00001620   Number         4  ym_uart.o(.text.UART1_Init_Config)
    [Anonymous Symbol]                       0x00001624   Section        0  uart.o(.text.UART_ConfigRunMode)
    __arm_cp.0_0                             0x00001664   Number         4  uart.o(.text.UART_ConfigRunMode)
    [Anonymous Symbol]                       0x00001668   Section        0  uart.o(.text.UART_EnableRBRInt)
    [Anonymous Symbol]                       0x00001680   Section        0  ym_rgb.o(.text.Update_Hook)
    __arm_cp.8_0                             0x000016a4   Number         4  ym_rgb.o(.text.Update_Hook)
    __arm_cp.8_1                             0x000016a8   Number         4  ym_rgb.o(.text.Update_Hook)
    __NVIC_ClearPendingIRQ                   0x000016ad   Thumb Code    40  system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x000016ac   Section        0  system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ)
    __arm_cp.4_0                             0x000016d4   Number         4  system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_EnableIRQ                         0x000016d9   Thumb Code    40  ym_timer.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x000016d8   Section        0  ym_timer.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00001701   Thumb Code    40  ym_uart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001700   Section        0  ym_uart.o(.text.__NVIC_EnableIRQ)
    __arm_cp.2_0                             0x00001728   Number         4  ym_uart.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x0000172d   Thumb Code   124  ym_timer.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x0000172c   Section        0  ym_timer.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x000017a9   Thumb Code   124  ym_uart.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000017a8   Section        0  ym_uart.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00001825   Thumb Code   124  bsp_systick.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00001824   Section        0  bsp_systick.o(.text.__NVIC_SetPriority)
    __arm_cp.7_0                             0x000018a0   Number         4  bsp_systick.o(.text.__NVIC_SetPriority)
    __arm_cp.7_1                             0x000018a4   Number         4  bsp_systick.o(.text.__NVIC_SetPriority)
    get_CamplarBuff                          0x000018a9   Thumb Code   332  ym_rgb.o(.text.get_CamplarBuff)
    [Anonymous Symbol]                       0x000018a8   Section        0  ym_rgb.o(.text.get_CamplarBuff)
    __arm_cp.15_0                            0x000019f4   Number         4  ym_rgb.o(.text.get_CamplarBuff)
    __arm_cp.15_1                            0x000019f8   Number         4  ym_rgb.o(.text.get_CamplarBuff)
    __arm_cp.15_2                            0x000019fc   Number         4  ym_rgb.o(.text.get_CamplarBuff)
    __arm_cp.15_3                            0x00001a00   Number         4  ym_rgb.o(.text.get_CamplarBuff)
    get_RGB_GRB_Camplar                      0x00001a05   Thumb Code    52  ym_rgb.o(.text.get_RGB_GRB_Camplar)
    [Anonymous Symbol]                       0x00001a04   Section        0  ym_rgb.o(.text.get_RGB_GRB_Camplar)
    [Anonymous Symbol]                       0x00001a38   Section        0  ym_uart.o(.text.get_Uart1_RxData)
    __arm_cp.3_0                             0x00001b5c   Number         4  ym_uart.o(.text.get_Uart1_RxData)
    __arm_cp.3_1                             0x00001b60   Number         4  ym_uart.o(.text.get_Uart1_RxData)
    __arm_cp.3_2                             0x00001b64   Number         4  ym_uart.o(.text.get_Uart1_RxData)
    get_white_breathRGB                      0x00001b69   Thumb Code   204  ym_rgb.o(.text.get_white_breathRGB)
    [Anonymous Symbol]                       0x00001b68   Section        0  ym_rgb.o(.text.get_white_breathRGB)
    __arm_cp.10_0                            0x00001c34   Number         4  ym_rgb.o(.text.get_white_breathRGB)
    __arm_cp.10_1                            0x00001c38   Number         4  ym_rgb.o(.text.get_white_breathRGB)
    __arm_cp.10_2                            0x00001c3c   Number         4  ym_rgb.o(.text.get_white_breathRGB)
    __arm_cp.10_3                            0x00001c40   Number         4  ym_rgb.o(.text.get_white_breathRGB)
    __arm_cp.10_4                            0x00001c44   Number         4  ym_rgb.o(.text.get_white_breathRGB)
    __arm_cp.10_5                            0x00001c48   Number         4  ym_rgb.o(.text.get_white_breathRGB)
    [Anonymous Symbol]                       0x00001c4c   Section        0  userlib.o(.text.limit_int16)
    __arm_cp.1_0                             0x00001cc4   Number         4  userlib.o(.text.limit_int16)
    [Anonymous Symbol]                       0x00001cc8   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x00001ce4   Number         4  main.o(.text.main)
    i.__scatterload_copy                     0x00001ce8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00001cf6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00001cf8   Section       14  handlers.o(i.__scatterload_zeroinit)
    get_white_breathRGB.addSymbol            0x20000004   Data           1  ym_rgb.o(.data.get_white_breathRGB.addSymbol)
    [Anonymous Symbol]                       0x20000004   Section        0  ym_rgb.o(.data.get_white_breathRGB.addSymbol)
    CCP_IRQHandler.camplerTicks              0x20000008   Data           1  ym_ccp.o(.bss.CCP_IRQHandler.camplerTicks)
    [Anonymous Symbol]                       0x20000008   Section        0  ym_ccp.o(.bss.CCP_IRQHandler.camplerTicks)
    CCP_IRQHandler.control_times             0x20000009   Data           1  ym_ccp.o(.bss.CCP_IRQHandler.control_times)
    [Anonymous Symbol]                       0x20000009   Section        0  ym_ccp.o(.bss.CCP_IRQHandler.control_times)
    CCP_IRQHandler.rgb_num                   0x2000000a   Data           1  ym_ccp.o(.bss.CCP_IRQHandler.rgb_num)
    [Anonymous Symbol]                       0x2000000a   Section        0  ym_ccp.o(.bss.CCP_IRQHandler.rgb_num)
    Ticks                                    0x2000023c   Data           4  bsp_systick.o(.bss.Ticks)
    [Anonymous Symbol]                       0x2000023c   Section        0  bsp_systick.o(.bss.Ticks)
    get_white_breathRGB.B                    0x20000260   Data           2  ym_rgb.o(.bss.get_white_breathRGB.B)
    [Anonymous Symbol]                       0x20000260   Section        0  ym_rgb.o(.bss.get_white_breathRGB.B)
    get_white_breathRGB.G                    0x20000262   Data           2  ym_rgb.o(.bss.get_white_breathRGB.G)
    [Anonymous Symbol]                       0x20000262   Section        0  ym_rgb.o(.bss.get_white_breathRGB.G)
    get_white_breathRGB.R                    0x20000264   Data           2  ym_rgb.o(.bss.get_white_breathRGB.R)
    [Anonymous Symbol]                       0x20000264   Section        0  ym_rgb.o(.bss.get_white_breathRGB.R)
    get_white_breathRGB.fdb                  0x20000268   Data           4  ym_rgb.o(.bss.get_white_breathRGB.fdb)
    [Anonymous Symbol]                       0x20000268   Section        0  ym_rgb.o(.bss.get_white_breathRGB.fdb)
    limit_int16.change                       0x2000026c   Data           2  userlib.o(.bss.limit_int16.change)
    [Anonymous Symbol]                       0x2000026c   Section        0  userlib.o(.bss.limit_int16.change)
    STACK                                    0x20000270   Section     1024  startup_cms32m67xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_cms32m67xx.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    user_opt_data                            0x000000c0   Data           4  system_cms32m67xx.o(.ARM.__AT_0x000000C0)
    __main                                   0x000000c5   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c5   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000cd   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000cd   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000cd   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000cd   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d5   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d5   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d9   Thumb Code     8  startup_cms32m67xx.o(.text)
    NMI_Handler                              0x000000e1   Thumb Code     2  startup_cms32m67xx.o(.text)
    HardFault_Handler                        0x000000e3   Thumb Code     2  startup_cms32m67xx.o(.text)
    SVC_Handler                              0x000000e5   Thumb Code     2  startup_cms32m67xx.o(.text)
    PendSV_Handler                           0x000000e7   Thumb Code     2  startup_cms32m67xx.o(.text)
    Reserved_IRQHandler                      0x000000eb   Thumb Code     2  startup_cms32m67xx.o(.text)
    ACMP_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    ADC_IRQHandler                           0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    FMC_IRQHandler                           0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    HALL_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    I2C0_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP0_IRQHandler                         0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP1_IRQHandler                         0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP2_IRQHandler                         0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP3_IRQHandler                         0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    LSITIMER_IRQHandler                      0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    SSP0_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM00_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM01H_IRQHandler                         0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM01_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM02_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM03_IRQHandler                          0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    UART0_IRQHandler                         0x000000ed   Thumb Code     0  startup_cms32m67xx.o(.text)
    __aeabi_uidiv                            0x000000f9   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x000000f9   Thumb Code    62  uidiv_div0.o(.text)
    __scatterload                            0x00000139   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000139   Thumb Code     0  init.o(.text)
    CCP0A_Init_Config                        0x0000015d   Thumb Code   100  ym_ccp.o(.text.CCP0A_Init_Config)
    CCP_ClearCompareIntFlag                  0x000001c5   Thumb Code    24  ccp.o(.text.CCP_ClearCompareIntFlag)
    CCP_ConfigCLK                            0x000001e1   Thumb Code   108  ccp.o(.text.CCP_ConfigCLK)
    CCP_ConfigCompare                        0x00000255   Thumb Code   156  ccp.o(.text.CCP_ConfigCompare)
    CCP_DisableRun                           0x000002f9   Thumb Code    32  ccp.o(.text.CCP_DisableRun)
    CCP_EnablePWMMode                        0x00000319   Thumb Code    60  ccp.o(.text.CCP_EnablePWMMode)
    CCP_EnableReverseOutput                  0x00000355   Thumb Code   132  ccp.o(.text.CCP_EnableReverseOutput)
    CCP_EnableRun                            0x000003dd   Thumb Code    32  ccp.o(.text.CCP_EnableRun)
    CCP_IRQHandler                           0x00000401   Thumb Code   176  ym_ccp.o(.text.CCP_IRQHandler)
    CCP_Start                                0x000004c5   Thumb Code    60  ccp.o(.text.CCP_Start)
    CCP_Stop                                 0x00000501   Thumb Code    60  ccp.o(.text.CCP_Stop)
    CGC_PER10PeriphClockCmd                  0x00000549   Thumb Code    48  cgc.o(.text.CGC_PER10PeriphClockCmd)
    CGC_PER11PeriphClockCmd                  0x0000057d   Thumb Code    44  cgc.o(.text.CGC_PER11PeriphClockCmd)
    CGC_PER12PeriphClockCmd                  0x000005ad   Thumb Code    44  cgc.o(.text.CGC_PER12PeriphClockCmd)
    CLK_GetHocoFreq                          0x000005dd   Thumb Code   208  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    DMA_CCP0A_Config                         0x000006e1   Thumb Code    72  ym_dma.o(.text.DMA_CCP0A_Config)
    DMA_Init                                 0x00000739   Thumb Code   236  dma.o(.text.DMA_Init)
    DMA_Start                                0x00000845   Thumb Code    40  dma.o(.text.DMA_Start)
    EPWM_AllBrakeDisable                     0x00000871   Thumb Code    24  epwm.o(.text.EPWM_AllBrakeDisable)
    EPWM_ClearZeroIntFlag                    0x0000088d   Thumb Code    24  epwm.o(.text.EPWM_ClearZeroIntFlag)
    EPWM_ConfigChannelClk                    0x000008a9   Thumb Code    56  epwm.o(.text.EPWM_ConfigChannelClk)
    EPWM_ConfigChannelPeriod                 0x000008ed   Thumb Code    48  epwm.o(.text.EPWM_ConfigChannelPeriod)
    EPWM_ConfigChannelSymDuty                0x00000921   Thumb Code    76  epwm.o(.text.EPWM_ConfigChannelSymDuty)
    EPWM_ConfigLoadAndIntMode                0x00000971   Thumb Code    56  epwm.o(.text.EPWM_ConfigLoadAndIntMode)
    EPWM_ConfigRunMode                       0x000009ad   Thumb Code    40  epwm.o(.text.EPWM_ConfigRunMode)
    EPWM_DisableDeadZone                     0x000009d5   Thumb Code   136  epwm.o(.text.EPWM_DisableDeadZone)
    EPWM_DisableReverseOutput                0x00000a5d   Thumb Code    32  epwm.o(.text.EPWM_DisableReverseOutput)
    EPWM_EnableAutoLoadMode                  0x00000a7d   Thumb Code    28  epwm.o(.text.EPWM_EnableAutoLoadMode)
    EPWM_EnableOutput                        0x00000a9d   Thumb Code    28  epwm.o(.text.EPWM_EnableOutput)
    EPWM_IRQHandler                          0x00000ac1   Thumb Code    28  ym_epwm.o(.text.EPWM_IRQHandler)
    EPWM_Init_Config                         0x00000add   Thumb Code   400  ym_epwm.o(.text.EPWM_Init_Config)
    EPWM_Start                               0x00000c85   Thumb Code    28  epwm.o(.text.EPWM_Start)
    GPIO_Init                                0x00000ca9   Thumb Code   444  gpio.o(.text.GPIO_Init)
    GPIO_Init_Config                         0x00000e79   Thumb Code    30  ym_gpio.o(.text.GPIO_Init_Config)
    Init_Cinfig                              0x00000e97   Thumb Code    56  init_config.o(.text.Init_Cinfig)
    KEY_Init_Config                          0x00000ecf   Thumb Code    30  ym_gpio.o(.text.KEY_Init_Config)
    LED_Init_Config                          0x00000eed   Thumb Code   110  ym_gpio.o(.text.LED_Init_Config)
    LVI_IRQHandler                           0x00000f5b   Thumb Code    10  system_cms32m67xx.o(.text.LVI_IRQHandler)
    PORT_ClrBit                              0x00000f65   Thumb Code    40  gpio.o(.text.PORT_ClrBit)
    PORT_SetBit                              0x00000f91   Thumb Code    36  gpio.o(.text.PORT_SetBit)
    RGB_Breath_Update                        0x00000fb9   Thumb Code   120  ym_rgb.o(.text.RGB_Breath_Update)
    RGB_ColorRGB_Update                      0x00001031   Thumb Code    50  ym_rgb.o(.text.RGB_ColorRGB_Update)
    RGB_Color_Update                         0x00001065   Thumb Code   144  ym_rgb.o(.text.RGB_Color_Update)
    RGB_Init_Config                          0x0000113d   Thumb Code    36  ym_rgb.o(.text.RGB_Init_Config)
    RGB_Mode_Set                             0x00001161   Thumb Code    24  ym_rgb.o(.text.RGB_Mode_Set)
    RGB_Mode_Update                          0x00001179   Thumb Code   192  ym_rgb.o(.text.RGB_Mode_Update)
    RGB_Power_Update                         0x00001245   Thumb Code    68  ym_rgb.o(.text.RGB_Power_Update)
    RGB_Status_Update                        0x00001289   Thumb Code    46  ym_rgb.o(.text.RGB_Status_Update)
    SysTick_Handler                          0x00001309   Thumb Code    24  bsp_systick.o(.text.SysTick_Handler)
    SystemInit                               0x00001325   Thumb Code   108  system_cms32m67xx.o(.text.SystemInit)
    Systick_Init_Config                      0x000013d1   Thumb Code    28  bsp_systick.o(.text.Systick_Init_Config)
    TIMER0_IRQHandler                        0x000013f1   Thumb Code    12  ym_timer.o(.text.TIMER0_IRQHandler)
    TIMER0_Init_Config                       0x000013fd   Thumb Code    64  ym_timer.o(.text.TIMER0_Init_Config)
    TIMER1_IRQHandler                        0x0000143d   Thumb Code    36  ym_timer.o(.text.TIMER1_IRQHandler)
    TIMER1_Init_Config                       0x00001465   Thumb Code    60  ym_timer.o(.text.TIMER1_Init_Config)
    TMR0_Int_Config                          0x000014a5   Thumb Code    40  ym_timer.o(.text.TMR0_Int_Config)
    TMR1_Int_Config                          0x000014d1   Thumb Code    40  ym_timer.o(.text.TMR1_Int_Config)
    TMR_ClearOverflowIntFlag                 0x000014fd   Thumb Code    16  timer.o(.text.TMR_ClearOverflowIntFlag)
    TMR_ConfigClk                            0x0000150d   Thumb Code    30  timer.o(.text.TMR_ConfigClk)
    TMR_ConfigRunMode                        0x0000152b   Thumb Code    36  timer.o(.text.TMR_ConfigRunMode)
    TMR_DisableOneShotMode                   0x0000154f   Thumb Code    18  timer.o(.text.TMR_DisableOneShotMode)
    TMR_EnableOverflowInt                    0x00001561   Thumb Code    18  timer.o(.text.TMR_EnableOverflowInt)
    TMR_SetPeriod                            0x00001573   Thumb Code    16  timer.o(.text.TMR_SetPeriod)
    TMR_Start                                0x00001583   Thumb Code    18  timer.o(.text.TMR_Start)
    Touch_Init_Config                        0x00001595   Thumb Code    14  ym_gpio.o(.text.Touch_Init_Config)
    UART1_IRQHandler                         0x000015a5   Thumb Code    36  ym_uart.o(.text.UART1_IRQHandler)
    UART1_Init_Config                        0x000015d1   Thumb Code    76  ym_uart.o(.text.UART1_Init_Config)
    UART_ConfigRunMode                       0x00001625   Thumb Code    64  uart.o(.text.UART_ConfigRunMode)
    UART_EnableRBRInt                        0x00001669   Thumb Code    24  uart.o(.text.UART_EnableRBRInt)
    Update_Hook                              0x00001681   Thumb Code    36  ym_rgb.o(.text.Update_Hook)
    get_Uart1_RxData                         0x00001a39   Thumb Code   292  ym_uart.o(.text.get_Uart1_RxData)
    limit_int16                              0x00001c4d   Thumb Code   120  userlib.o(.text.limit_int16)
    main                                     0x00001cc9   Thumb Code    28  main.o(.text.main)
    __scatterload_copy                       0x00001ce9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00001cf7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00001cf9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00001d08   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001d28   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_cms32m67xx.o(.data.SystemCoreClock)
    DMACamplaBuff                            0x2000000c   Data         512  ym_rgb.o(.bss.DMACamplaBuff)
    DMA_InitStructure                        0x2000020c   Data          24  ym_dma.o(.bss.DMA_InitStructure)
    RGB_DataStracture                        0x20000224   Data          24  ym_rgb.o(.bss.RGB_DataStracture)
    UART1RxBuffer                            0x20000240   Data          32  ym_uart.o(.bss.UART1RxBuffer)
    rxTimes                                  0x2000026e   Data           1  ym_uart.o(.bss.rxTimes)
    rx_ind                                   0x2000026f   Data           1  ym_uart.o(.bss.rx_ind)
    __initial_sp                             0x20000670   Data           0  startup_cms32m67xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c5

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00001d30, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001d28, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          733    RESET               startup_cms32m67xx.o
    0x000000c0   0x000000c0   0x00000004   Data   RO          754    .ARM.__AT_0x000000C0  system_cms32m67xx.o
    0x000000c4   0x000000c4   0x00000000   Code   RO          761  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO          772    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c8   0x000000c8   0x00000004   Code   RO          775    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000cc   0x000000cc   0x00000000   Code   RO          777    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000cc   0x000000cc   0x00000000   Code   RO          779    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000cc   0x000000cc   0x00000008   Code   RO          780    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO          782    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO          784    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d4   0x000000d4   0x00000004   Code   RO          773    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d8   0x000000d8   0x00000020   Code   RO          734    .text               startup_cms32m67xx.o
    0x000000f8   0x000000f8   0x0000003e   Code   RO          788    .text               mc_p.l(uidiv_div0.o)
    0x00000136   0x00000136   0x00000002   PAD
    0x00000138   0x00000138   0x00000024   Code   RO          795    .text               mc_p.l(init.o)
    0x0000015c   0x0000015c   0x00000068   Code   RO           44    .text.CCP0A_Init_Config  ym_ccp.o
    0x000001c4   0x000001c4   0x0000001c   Code   RO          343    .text.CCP_ClearCompareIntFlag  ccp.o
    0x000001e0   0x000001e0   0x00000074   Code   RO          311    .text.CCP_ConfigCLK  ccp.o
    0x00000254   0x00000254   0x000000a4   Code   RO          323    .text.CCP_ConfigCompare  ccp.o
    0x000002f8   0x000002f8   0x00000020   Code   RO          315    .text.CCP_DisableRun  ccp.o
    0x00000318   0x00000318   0x0000003c   Code   RO          317    .text.CCP_EnablePWMMode  ccp.o
    0x00000354   0x00000354   0x00000088   Code   RO          325    .text.CCP_EnableReverseOutput  ccp.o
    0x000003dc   0x000003dc   0x00000024   Code   RO          313    .text.CCP_EnableRun  ccp.o
    0x00000400   0x00000400   0x000000c4   Code   RO           50    .text.CCP_IRQHandler  ym_ccp.o
    0x000004c4   0x000004c4   0x0000003c   Code   RO          307    .text.CCP_Start     ccp.o
    0x00000500   0x00000500   0x00000048   Code   RO          309    .text.CCP_Stop      ccp.o
    0x00000548   0x00000548   0x00000034   Code   RO          439    .text.CGC_PER10PeriphClockCmd  cgc.o
    0x0000057c   0x0000057c   0x00000030   Code   RO          441    .text.CGC_PER11PeriphClockCmd  cgc.o
    0x000005ac   0x000005ac   0x00000030   Code   RO          443    .text.CGC_PER12PeriphClockCmd  cgc.o
    0x000005dc   0x000005dc   0x00000104   Code   RO          741    .text.CLK_GetHocoFreq  system_cms32m67xx.o
    0x000006e0   0x000006e0   0x00000058   Code   RO           63    .text.DMA_CCP0A_Config  ym_dma.o
    0x00000738   0x00000738   0x0000010c   Code   RO          220    .text.DMA_Init      dma.o
    0x00000844   0x00000844   0x0000002c   Code   RO          222    .text.DMA_Start     dma.o
    0x00000870   0x00000870   0x0000001c   Code   RO          560    .text.EPWM_AllBrakeDisable  epwm.o
    0x0000088c   0x0000088c   0x0000001c   Code   RO          638    .text.EPWM_ClearZeroIntFlag  epwm.o
    0x000008a8   0x000008a8   0x00000044   Code   RO          500    .text.EPWM_ConfigChannelClk  epwm.o
    0x000008ec   0x000008ec   0x00000034   Code   RO          502    .text.EPWM_ConfigChannelPeriod  epwm.o
    0x00000920   0x00000920   0x00000050   Code   RO          504    .text.EPWM_ConfigChannelSymDuty  epwm.o
    0x00000970   0x00000970   0x0000003c   Code   RO          512    .text.EPWM_ConfigLoadAndIntMode  epwm.o
    0x000009ac   0x000009ac   0x00000028   Code   RO          498    .text.EPWM_ConfigRunMode  epwm.o
    0x000009d4   0x000009d4   0x00000088   Code   RO          522    .text.EPWM_DisableDeadZone  epwm.o
    0x00000a5c   0x00000a5c   0x00000020   Code   RO          518    .text.EPWM_DisableReverseOutput  epwm.o
    0x00000a7c   0x00000a7c   0x00000020   Code   RO          510    .text.EPWM_EnableAutoLoadMode  epwm.o
    0x00000a9c   0x00000a9c   0x00000024   Code   RO          528    .text.EPWM_EnableOutput  epwm.o
    0x00000ac0   0x00000ac0   0x0000001c   Code   RO          164    .text.EPWM_IRQHandler  ym_epwm.o
    0x00000adc   0x00000adc   0x000001a8   Code   RO          162    .text.EPWM_Init_Config  ym_epwm.o
    0x00000c84   0x00000c84   0x00000024   Code   RO          532    .text.EPWM_Start    epwm.o
    0x00000ca8   0x00000ca8   0x000001d0   Code   RO          265    .text.GPIO_Init     gpio.o
    0x00000e78   0x00000e78   0x0000001e   Code   RO          207    .text.GPIO_Init_Config  ym_gpio.o
    0x00000e96   0x00000e96   0x00000038   Code   RO           11    .text.Init_Cinfig   init_config.o
    0x00000ece   0x00000ece   0x0000001e   Code   RO          209    .text.KEY_Init_Config  ym_gpio.o
    0x00000eec   0x00000eec   0x0000006e   Code   RO          205    .text.LED_Init_Config  ym_gpio.o
    0x00000f5a   0x00000f5a   0x0000000a   Code   RO          747    .text.LVI_IRQHandler  system_cms32m67xx.o
    0x00000f64   0x00000f64   0x0000002c   Code   RO          253    .text.PORT_ClrBit   gpio.o
    0x00000f90   0x00000f90   0x00000028   Code   RO          251    .text.PORT_SetBit   gpio.o
    0x00000fb8   0x00000fb8   0x00000078   Code   RO           91    .text.RGB_Breath_Update  ym_rgb.o
    0x00001030   0x00001030   0x00000032   Code   RO           83    .text.RGB_ColorRGB_Update  ym_rgb.o
    0x00001062   0x00001062   0x00000002   PAD
    0x00001064   0x00001064   0x00000090   Code   RO           79    .text.RGB_Color_Update  ym_rgb.o
    0x000010f4   0x000010f4   0x00000048   Code   RO          101    .text.RGB_DataInit  ym_rgb.o
    0x0000113c   0x0000113c   0x00000024   Code   RO           99    .text.RGB_Init_Config  ym_rgb.o
    0x00001160   0x00001160   0x00000018   Code   RO           73    .text.RGB_Mode_Set  ym_rgb.o
    0x00001178   0x00001178   0x000000cc   Code   RO           75    .text.RGB_Mode_Update  ym_rgb.o
    0x00001244   0x00001244   0x00000044   Code   RO           87    .text.RGB_Power_Update  ym_rgb.o
    0x00001288   0x00001288   0x0000002e   Code   RO           97    .text.RGB_Status_Update  ym_rgb.o
    0x000012b6   0x000012b6   0x00000002   PAD
    0x000012b8   0x000012b8   0x00000050   Code   RO          175    .text.SysTick_Config  bsp_systick.o
    0x00001308   0x00001308   0x0000001c   Code   RO          185    .text.SysTick_Handler  bsp_systick.o
    0x00001324   0x00001324   0x000000ac   Code   RO          745    .text.SystemInit    system_cms32m67xx.o
    0x000013d0   0x000013d0   0x00000020   Code   RO          173    .text.Systick_Init_Config  bsp_systick.o
    0x000013f0   0x000013f0   0x0000000c   Code   RO          131    .text.TIMER0_IRQHandler  ym_timer.o
    0x000013fc   0x000013fc   0x00000040   Code   RO          127    .text.TIMER0_Init_Config  ym_timer.o
    0x0000143c   0x0000143c   0x00000028   Code   RO          133    .text.TIMER1_IRQHandler  ym_timer.o
    0x00001464   0x00001464   0x00000040   Code   RO          129    .text.TIMER1_Init_Config  ym_timer.o
    0x000014a4   0x000014a4   0x0000002c   Code   RO          119    .text.TMR0_Int_Config  ym_timer.o
    0x000014d0   0x000014d0   0x0000002c   Code   RO          125    .text.TMR1_Int_Config  ym_timer.o
    0x000014fc   0x000014fc   0x00000010   Code   RO          296    .text.TMR_ClearOverflowIntFlag  timer.o
    0x0000150c   0x0000150c   0x0000001e   Code   RO          286    .text.TMR_ConfigClk  timer.o
    0x0000152a   0x0000152a   0x00000024   Code   RO          280    .text.TMR_ConfigRunMode  timer.o
    0x0000154e   0x0000154e   0x00000012   Code   RO          284    .text.TMR_DisableOneShotMode  timer.o
    0x00001560   0x00001560   0x00000012   Code   RO          290    .text.TMR_EnableOverflowInt  timer.o
    0x00001572   0x00001572   0x00000010   Code   RO          288    .text.TMR_SetPeriod  timer.o
    0x00001582   0x00001582   0x00000012   Code   RO          276    .text.TMR_Start     timer.o
    0x00001594   0x00001594   0x0000000e   Code   RO          211    .text.Touch_Init_Config  ym_gpio.o
    0x000015a2   0x000015a2   0x00000002   PAD
    0x000015a4   0x000015a4   0x0000002c   Code   RO          150    .text.UART1_IRQHandler  ym_uart.o
    0x000015d0   0x000015d0   0x00000054   Code   RO          142    .text.UART1_Init_Config  ym_uart.o
    0x00001624   0x00001624   0x00000044   Code   RO          410    .text.UART_ConfigRunMode  uart.o
    0x00001668   0x00001668   0x00000018   Code   RO          424    .text.UART_EnableRBRInt  uart.o
    0x00001680   0x00001680   0x0000002c   Code   RO           89    .text.Update_Hook   ym_rgb.o
    0x000016ac   0x000016ac   0x0000002c   Code   RO          749    .text.__NVIC_ClearPendingIRQ  system_cms32m67xx.o
    0x000016d8   0x000016d8   0x00000028   Code   RO          121    .text.__NVIC_EnableIRQ  ym_timer.o
    0x00001700   0x00001700   0x0000002c   Code   RO          146    .text.__NVIC_EnableIRQ  ym_uart.o
    0x0000172c   0x0000172c   0x0000007c   Code   RO          123    .text.__NVIC_SetPriority  ym_timer.o
    0x000017a8   0x000017a8   0x0000007c   Code   RO          144    .text.__NVIC_SetPriority  ym_uart.o
    0x00001824   0x00001824   0x00000084   Code   RO          187    .text.__NVIC_SetPriority  bsp_systick.o
    0x000018a8   0x000018a8   0x0000015c   Code   RO          103    .text.get_CamplarBuff  ym_rgb.o
    0x00001a04   0x00001a04   0x00000034   Code   RO           95    .text.get_RGB_GRB_Camplar  ym_rgb.o
    0x00001a38   0x00001a38   0x00000130   Code   RO          148    .text.get_Uart1_RxData  ym_uart.o
    0x00001b68   0x00001b68   0x000000e4   Code   RO           93    .text.get_white_breathRGB  ym_rgb.o
    0x00001c4c   0x00001c4c   0x0000007c   Code   RO          685    .text.limit_int16   userlib.o
    0x00001cc8   0x00001cc8   0x00000020   Code   RO            2    .text.main          main.o
    0x00001ce8   0x00001ce8   0x0000000e   Code   RO          799    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00001cf6   0x00001cf6   0x00000002   Code   RO          800    i.__scatterload_null  mc_p.l(handlers.o)
    0x00001cf8   0x00001cf8   0x0000000e   Code   RO          801    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00001d06   0x00001d06   0x00000002   PAD
    0x00001d08   0x00001d08   0x00000020   Data   RO          798    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00001d28, Size: 0x00000670, Max: 0x00001000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001d28   0x00000004   Data   RW          751    .data.SystemCoreClock  system_cms32m67xx.o
    0x20000004   0x00001d2c   0x00000001   Data   RW          107    .data.get_white_breathRGB.addSymbol  ym_rgb.o
    0x20000005   0x00001d2d   0x00000003   PAD
    0x20000008        -       0x00000001   Zero   RW           53    .bss.CCP_IRQHandler.camplerTicks  ym_ccp.o
    0x20000009        -       0x00000001   Zero   RW           55    .bss.CCP_IRQHandler.control_times  ym_ccp.o
    0x2000000a        -       0x00000001   Zero   RW           54    .bss.CCP_IRQHandler.rgb_num  ym_ccp.o
    0x2000000b   0x00001d2d   0x00000001   PAD
    0x2000000c        -       0x00000200   Zero   RW          105    .bss.DMACamplaBuff  ym_rgb.o
    0x2000020c        -       0x00000018   Zero   RW           66    .bss.DMA_InitStructure  ym_dma.o
    0x20000224        -       0x00000018   Zero   RW          106    .bss.RGB_DataStracture  ym_rgb.o
    0x2000023c        -       0x00000004   Zero   RW          189    .bss.Ticks          bsp_systick.o
    0x20000240        -       0x00000020   Zero   RW          154    .bss.UART1RxBuffer  ym_uart.o
    0x20000260        -       0x00000002   Zero   RW          110    .bss.get_white_breathRGB.B  ym_rgb.o
    0x20000262        -       0x00000002   Zero   RW          109    .bss.get_white_breathRGB.G  ym_rgb.o
    0x20000264        -       0x00000002   Zero   RW          108    .bss.get_white_breathRGB.R  ym_rgb.o
    0x20000266   0x00001d2d   0x00000002   PAD
    0x20000268        -       0x00000004   Zero   RW          111    .bss.get_white_breathRGB.fdb  ym_rgb.o
    0x2000026c        -       0x00000002   Zero   RW          712    .bss.limit_int16.change  userlib.o
    0x2000026e        -       0x00000001   Zero   RW          152    .bss.rxTimes        ym_uart.o
    0x2000026f        -       0x00000001   Zero   RW          153    .bss.rx_ind         ym_uart.o
    0x20000270        -       0x00000400   Zero   RW          731    STACK               startup_cms32m67xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       272         28          0          0          4       3212   bsp_systick.o
       704         40          0          0          0       8927   ccp.o
       148         12          0          0          0       5081   cgc.o
       312         36          0          0          0       2700   dma.o
       628         52          0          0          0      12476   epwm.o
       548         56          0          0          0       7529   gpio.o
        56          0          0          0          0        361   init_config.o
        32          4          0          0          0        370   main.o
        32         10        192          0       1024        692   startup_cms32m67xx.o
       486        204          4          4          0       4076   system_cms32m67xx.o
       152          0          0          0          0       2105   timer.o
        92          4          0          0          0       1987   uart.o
       124          4          0          0          2       4026   userlib.o
       300         24          0          0          3       8431   ym_ccp.o
        88         16          0          0         24       2133   ym_dma.o
       452         24          0          0          0       5188   ym_epwm.o
       184          0          0          0          0       1051   ym_gpio.o
      1436         64          0          1        546       5621   ym_rgb.o
       432         16          0          0          0       3152   ym_timer.o
       600         32          0          0         34       7538   ym_uart.o

    ----------------------------------------------------------------------
      7084        626        228          8       1640      86656   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          0          3          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        62          0          0          0          0         72   uidiv_div0.o

    ----------------------------------------------------------------------
       152         16          0          0          0        140   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       148         16          0          0          0        140   mc_p.l

    ----------------------------------------------------------------------
       152         16          0          0          0        140   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7236        642        228          8       1640      86588   Grand Totals
      7236        642        228          8       1640      86588   ELF Image Totals
      7236        642        228          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7464 (   7.29kB)
    Total RW  Size (RW Data + ZI Data)              1648 (   1.61kB)
    Total ROM Size (Code + RO Data + RW Data)       7472 (   7.30kB)

==============================================================================

