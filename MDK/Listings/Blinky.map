Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to bsp_systick.o(.text.Systick_Init_Config) for Systick_Init_Config
    main.o(.text.main) refers to ym_rgb.o(.text.RGB_Init_Config) for RGB_Init_Config
    main.o(.text.main) refers to ym_ccp.o(.text.CCP_PWM_Config) for CCP_PWM_Config
    main.o(.text.main) refers to ym_timer.o(.text.TIMER0_Init_Config) for TIMER0_Init_Config
    main.o(.text.main) refers to main.o(.bss.CGCdata) for CGCdata
    main.o(.text.main) refers to main.o(.bss.TIMER0Data) for TIMER0Data
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fputc) refers to retarget.o(.text.fputc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fgetc) refers to retarget.o(.text.fgetc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_exit) refers to retarget.o(.text._sys_exit) for [Anonymous Symbol]
    ym_ccp.o(.text.CCP_PWM_Config) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_ccp.o(.text.CCP_PWM_Config) refers to ccp.o(.text.CCP_ConfigCLK) for CCP_ConfigCLK
    ym_ccp.o(.text.CCP_PWM_Config) refers to ccp.o(.text.CCP_EnablePWMMode) for CCP_EnablePWMMode
    ym_ccp.o(.text.CCP_PWM_Config) refers to ccp.o(.text.CCP_ConfigCompare) for CCP_ConfigCompare
    ym_ccp.o(.text.CCP_PWM_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_ccp.o(.text.CCP_PWM_Config) refers to ccp.o(.text.CCP_EnableRun) for CCP_EnableRun
    ym_ccp.o(.text.CCP_PWM_Config) refers to ccp.o(.text.CCP_Start) for CCP_Start
    ym_ccp.o(.ARM.exidx.text.CCP_PWM_Config) refers to ym_ccp.o(.text.CCP_PWM_Config) for [Anonymous Symbol]
    ym_dma.o(.text.DMA_CCP0A_Config) refers to dma.o(.text.DMA_Init) for DMA_Init
    ym_dma.o(.text.DMA_CCP0A_Config) refers to dma.o(.text.DMA_Trigger) for DMA_Trigger
    ym_dma.o(.text.DMA_CCP0A_Config) refers to dma.o(.text.DMA_Start) for DMA_Start
    ym_dma.o(.text.DMA_CCP0A_Config) refers to ym_rgb.o(.data.testData) for testData
    ym_dma.o(.ARM.exidx.text.DMA_CCP0A_Config) refers to ym_dma.o(.text.DMA_CCP0A_Config) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Output) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ym_rgb.o(.text.RGB_Output) refers to ym_rgb.o(.bss.breath) for breath
    ym_rgb.o(.text.RGB_Output) refers to ym_rgb.o(.bss.RGB_Output.addr_add_num) for [Anonymous Symbol]
    ym_rgb.o(.ARM.exidx.text.RGB_Output) refers to ym_rgb.o(.text.RGB_Output) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_rgb.o(.text.RGB_Init_Config) refers to ym_rgb.o(.text.RGB_DataInit) for RGB_DataInit
    ym_rgb.o(.text.RGB_Init_Config) refers to ym_rgb.o(.bss.RGB_DataStracture) for RGB_DataStracture
    ym_rgb.o(.ARM.exidx.text.RGB_Init_Config) refers to ym_rgb.o(.text.RGB_Init_Config) for [Anonymous Symbol]
    ym_rgb.o(.text.RGB_DataInit) refers to ym_rgb.o(.text.getCamplarBuff) for getCamplarBuff
    ym_rgb.o(.ARM.exidx.text.RGB_DataInit) refers to ym_rgb.o(.text.RGB_DataInit) for [Anonymous Symbol]
    ym_rgb.o(.ARM.exidx.text.getCamplarBuff) refers to ym_rgb.o(.text.getCamplarBuff) for [Anonymous Symbol]
    ym_timer.o(.text.TIMER0_Init_Config) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_ConfigClk) for TMR_ConfigClk
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_ConfigRunMode) for TMR_ConfigRunMode
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_DisableOneShotMode) for TMR_DisableOneShotMode
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_SetPeriod) for TMR_SetPeriod
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_EnableOverflowInt) for TMR_EnableOverflowInt
    ym_timer.o(.text.TIMER0_Init_Config) refers to ym_timer.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ym_timer.o(.text.TIMER0_Init_Config) refers to ym_timer.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    ym_timer.o(.text.TIMER0_Init_Config) refers to timer.o(.text.TMR_Start) for TMR_Start
    ym_timer.o(.ARM.exidx.text.TIMER0_Init_Config) refers to ym_timer.o(.text.TIMER0_Init_Config) for [Anonymous Symbol]
    ym_timer.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to ym_timer.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    ym_timer.o(.ARM.exidx.text.__NVIC_SetPriority) refers to ym_timer.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    ym_timer.o(.text.TIMER0_IRQHandler) refers to timer.o(.text.TMR_GetOverflowIntFlag) for TMR_GetOverflowIntFlag
    ym_timer.o(.text.TIMER0_IRQHandler) refers to timer.o(.text.TMR_ClearOverflowIntFlag) for TMR_ClearOverflowIntFlag
    ym_timer.o(.ARM.exidx.text.TIMER0_IRQHandler) refers to ym_timer.o(.text.TIMER0_IRQHandler) for [Anonymous Symbol]
    ym_uart.o(.text.UART0_Config) refers to cgc.o(.text.CGC_PER12PeriphClockCmd) for CGC_PER12PeriphClockCmd
    ym_uart.o(.text.UART0_Config) refers to uart.o(.text.UART_ConfigRunMode) for UART_ConfigRunMode
    ym_uart.o(.text.UART0_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_uart.o(.text.UART0_Config) refers to gpio.o(.text.RESTPinGpio_Set) for RESTPinGpio_Set
    ym_uart.o(.ARM.exidx.text.UART0_Config) refers to ym_uart.o(.text.UART0_Config) for [Anonymous Symbol]
    ym_uart.o(.ARM.exidx.text.Uart0_putchar) refers to ym_uart.o(.text.Uart0_putchar) for [Anonymous Symbol]
    ym_uart.o(.ARM.exidx.text.Uart0_getchar) refers to ym_uart.o(.text.Uart0_getchar) for [Anonymous Symbol]
    ym_led.o(.text.LED_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_led.o(.text.LED_Init_Config) refers to gpio.o(.text.PORT_SetBit) for PORT_SetBit
    ym_led.o(.ARM.exidx.text.LED_Init_Config) refers to ym_led.o(.text.LED_Init_Config) for [Anonymous Symbol]
    ym_touch.o(.text.Touch_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_touch.o(.ARM.exidx.text.Touch_Init_Config) refers to ym_touch.o(.text.Touch_Init_Config) for [Anonymous Symbol]
    ym_epwm.o(.text.EPWM_Init_Config) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for CGC_PER11PeriphClockCmd
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigRunMode) for EPWM_ConfigRunMode
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigChannelClk) for EPWM_ConfigChannelClk
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigChannelPeriod) for EPWM_ConfigChannelPeriod
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigChannelSymDuty) for EPWM_ConfigChannelSymDuty
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_DisableDeadZone) for EPWM_DisableDeadZone
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_DisableReverseOutput) for EPWM_DisableReverseOutput
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_EnableAutoLoadMode) for EPWM_EnableAutoLoadMode
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_ConfigLoadAndIntMode) for EPWM_ConfigLoadAndIntMode
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_AllBrakeDisable) for EPWM_AllBrakeDisable
    ym_epwm.o(.text.EPWM_Init_Config) refers to gpio.o(.text.GPIO_Init) for GPIO_Init
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_EnableOutput) for EPWM_EnableOutput
    ym_epwm.o(.text.EPWM_Init_Config) refers to epwm.o(.text.EPWM_Start) for EPWM_Start
    ym_epwm.o(.ARM.exidx.text.EPWM_Init_Config) refers to ym_epwm.o(.text.EPWM_Init_Config) for [Anonymous Symbol]
    bsp_systick.o(.text.Systick_Init_Config) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bsp_systick.o(.text.Systick_Init_Config) refers to bsp_systick.o(.text.SysTick_Config) for SysTick_Config
    bsp_systick.o(.text.Systick_Init_Config) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_systick.o(.ARM.exidx.text.Systick_Init_Config) refers to bsp_systick.o(.text.Systick_Init_Config) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Config) refers to bsp_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    bsp_systick.o(.ARM.exidx.text.SysTick_Config) refers to bsp_systick.o(.text.SysTick_Config) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Delay_us) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bsp_systick.o(.text.SysTick_Delay_us) refers to bsp_systick.o(.text.SysTick_Config) for SysTick_Config
    bsp_systick.o(.text.SysTick_Delay_us) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_systick.o(.ARM.exidx.text.SysTick_Delay_us) refers to bsp_systick.o(.text.SysTick_Delay_us) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Delay_ms) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bsp_systick.o(.text.SysTick_Delay_ms) refers to bsp_systick.o(.text.SysTick_Config) for SysTick_Config
    bsp_systick.o(.text.SysTick_Delay_ms) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    bsp_systick.o(.ARM.exidx.text.SysTick_Delay_ms) refers to bsp_systick.o(.text.SysTick_Delay_ms) for [Anonymous Symbol]
    bsp_systick.o(.text.Delay_us) refers to bsp_systick.o(.bss.Ticks) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.Delay_us) refers to bsp_systick.o(.text.Delay_us) for [Anonymous Symbol]
    bsp_systick.o(.text.Delay_ms) refers to bsp_systick.o(.bss.Ticks) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.Delay_ms) refers to bsp_systick.o(.text.Delay_ms) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Handler) refers to bsp_systick.o(.bss.SysTick_Handler.camplerTicks) for [Anonymous Symbol]
    bsp_systick.o(.text.SysTick_Handler) refers to bsp_systick.o(.data.ccpCamplerDataPoint) for ccpCamplerDataPoint
    bsp_systick.o(.text.SysTick_Handler) refers to ym_rgb.o(.data.testData) for testData
    bsp_systick.o(.text.SysTick_Handler) refers to bsp_systick.o(.bss.Ticks) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.SysTick_Handler) refers to bsp_systick.o(.text.SysTick_Handler) for [Anonymous Symbol]
    bsp_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to bsp_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    bsp_systick.o(.data.ccpCamplerDataPoint) refers to ym_rgb.o(.data.testData) for testData
    dma.o(.text.DMA_Init) refers to cgc.o(.text.CGC_PER10PeriphClockCmd) for CGC_PER10PeriphClockCmd
    dma.o(.ARM.exidx.text.DMA_Init) refers to dma.o(.text.DMA_Init) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.DMA_Start) refers to dma.o(.text.DMA_Start) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.DMA_Stop) refers to dma.o(.text.DMA_Stop) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.DMA_Trigger) refers to dma.o(.text.DMA_Trigger) for [Anonymous Symbol]
    delay.o(.text.delay1_us) refers to delay.o(.bss.Value_us) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay1_us) refers to delay.o(.text.delay1_us) for [Anonymous Symbol]
    delay.o(.text.m0_delay_ms) refers to delay.o(.text.delay1_us) for delay1_us
    delay.o(.ARM.exidx.text.m0_delay_ms) refers to delay.o(.text.m0_delay_ms) for [Anonymous Symbol]
    delay.o(.text.m0_delay_us) refers to delay.o(.text.delay1_us) for delay1_us
    delay.o(.ARM.exidx.text.m0_delay_us) refers to delay.o(.text.m0_delay_us) for [Anonymous Symbol]
    delay.o(.text.delay_init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    delay.o(.text.delay_init) refers to delay.o(.bss.Value_us) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_init) refers to delay.o(.text.delay_init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_SetBit) refers to gpio.o(.text.PORT_SetBit) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_ClrBit) refers to gpio.o(.text.PORT_ClrBit) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_ToggleBit) refers to gpio.o(.text.PORT_ToggleBit) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_GetBit) refers to gpio.o(.text.PORT_GetBit) for [Anonymous Symbol]
    gpio.o(.text.PORT_GetBitValue) refers to gpio.o(.text.PORT_GetBit) for PORT_GetBit
    gpio.o(.ARM.exidx.text.PORT_GetBitValue) refers to gpio.o(.text.PORT_GetBitValue) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_PullUp) refers to gpio.o(.text.PORT_PullUp) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.PORT_PullDown) refers to gpio.o(.text.PORT_PullDown) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_Init) refers to gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.RESTPinGpio_Set) refers to gpio.o(.text.RESTPinGpio_Set) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_Start) refers to timer.o(.text.TMR_Start) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_Stop) refers to timer.o(.text.TMR_Stop) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_ConfigRunMode) refers to timer.o(.text.TMR_ConfigRunMode) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_EnableOneShotMode) refers to timer.o(.text.TMR_EnableOneShotMode) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_DisableOneShotMode) refers to timer.o(.text.TMR_DisableOneShotMode) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_ConfigClk) refers to timer.o(.text.TMR_ConfigClk) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_SetPeriod) refers to timer.o(.text.TMR_SetPeriod) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_EnableOverflowInt) refers to timer.o(.text.TMR_EnableOverflowInt) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_DisableOverflowInt) refers to timer.o(.text.TMR_DisableOverflowInt) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_GetOverflowIntFlag) refers to timer.o(.text.TMR_GetOverflowIntFlag) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_ClearOverflowIntFlag) refers to timer.o(.text.TMR_ClearOverflowIntFlag) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TMR_GetTimingData) refers to timer.o(.text.TMR_GetTimingData) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_Start) refers to ccp.o(.text.CCP_Start) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_Stop) refers to ccp.o(.text.CCP_Stop) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCLK) refers to ccp.o(.text.CCP_ConfigCLK) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableRun) refers to ccp.o(.text.CCP_EnableRun) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableRun) refers to ccp.o(.text.CCP_DisableRun) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnablePWMMode) refers to ccp.o(.text.CCP_EnablePWMMode) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnablePWMHalfCycleMode) refers to ccp.o(.text.CCP_EnablePWMHalfCycleMode) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisablePWMHalfCycleMode) refers to ccp.o(.text.CCP_DisablePWMHalfCycleMode) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCompare) refers to ccp.o(.text.CCP_ConfigCompare) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableReverseOutput) refers to ccp.o(.text.CCP_EnableReverseOutput) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableReverseOutput) refers to ccp.o(.text.CCP_DisableReverseOutput) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableOverflowInt) refers to ccp.o(.text.CCP_EnableOverflowInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableOverflowInt) refers to ccp.o(.text.CCP_DisableOverflowInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetOverflowIntFlag) refers to ccp.o(.text.CCP_GetOverflowIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearOverflowIntFlag) refers to ccp.o(.text.CCP_ClearOverflowIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCompareInt) refers to ccp.o(.text.CCP_EnableCompareInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCompareInt) refers to ccp.o(.text.CCP_DisableCompareInt) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCompareIntFlag) refers to ccp.o(.text.CCP_GetCompareIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCompareIntFlag) refers to ccp.o(.text.CCP_ClearCompareIntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0) refers to ccp.o(.text.CCP_EnableCAPMode0) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode0) refers to ccp.o(.text.CCP_ConfigCAPMode0) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_SelCAPMode0Channel) refers to ccp.o(.text.CCP_SelCAPMode0Channel) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode0Result) refers to ccp.o(.text.CCP_GetCAPMode0Result) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0Int) refers to ccp.o(.text.CCP_EnableCAPMode0Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode0Int) refers to ccp.o(.text.CCP_DisableCAPMode0Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode0IntFlag) refers to ccp.o(.text.CCP_GetCAPMode0IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCAPMode0IntFlag) refers to ccp.o(.text.CCP_ClearCAPMode0IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1) refers to ccp.o(.text.CCP_EnableCAPMode1) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1) refers to ccp.o(.text.CCP_DisableCAPMode1) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPnReload) refers to ccp.o(.text.CCP_EnableCAPnReload) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPnReload) refers to ccp.o(.text.CCP_DisableCAPnReload) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode1) refers to ccp.o(.text.CCP_ConfigCAPMode1) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_SelCAPMode1Channel) refers to ccp.o(.text.CCP_SelCAPMode1Channel) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_TriggerCaputer) refers to ccp.o(.text.CCP_TriggerCaputer) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode1Result) refers to ccp.o(.text.CCP_GetCAPMode1Result) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1Int) refers to ccp.o(.text.CCP_EnableCAPMode1Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1Int) refers to ccp.o(.text.CCP_DisableCAPMode1Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode1IntFlag) refers to ccp.o(.text.CCP_GetCAPMode1IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCAPMode1IntFlag) refers to ccp.o(.text.CCP_ClearCAPMode1IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2) refers to ccp.o(.text.CCP_EnableCAPMode2) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2) refers to ccp.o(.text.CCP_DisableCAPMode2) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode2) refers to ccp.o(.text.CCP_ConfigCAPMode2) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_SelCAPMode2Channel) refers to ccp.o(.text.CCP_SelCAPMode2Channel) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode2Result) refers to ccp.o(.text.CCP_GetCAPMode2Result) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2Int) refers to ccp.o(.text.CCP_EnableCAPMode2Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2Int) refers to ccp.o(.text.CCP_DisableCAPMode2Int) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_GetCAPMode2IntFlag) refers to ccp.o(.text.CCP_GetCAPMode2IntFlag) for [Anonymous Symbol]
    ccp.o(.ARM.exidx.text.CCP_ClearCAPMode2IntFlag) refers to ccp.o(.text.CCP_ClearCAPMode2IntFlag) for [Anonymous Symbol]
    uart.o(.text.UART_ConfigRunMode) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    uart.o(.text.UART_ConfigRunMode) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    uart.o(.ARM.exidx.text.UART_ConfigRunMode) refers to uart.o(.text.UART_ConfigRunMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_WriteTHR) refers to uart.o(.text.UART_WriteTHR) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_ReadRBR) refers to uart.o(.text.UART_ReadRBR) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableRxLineInt) refers to uart.o(.text.UART_EnableRxLineInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableRxLineInt) refers to uart.o(.text.UART_DisableRxLineInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableTHREInt) refers to uart.o(.text.UART_EnableTHREInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableTHREInt) refers to uart.o(.text.UART_DisableTHREInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableRBRInt) refers to uart.o(.text.UART_EnableRBRInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableRBRInt) refers to uart.o(.text.UART_DisableRBRInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Lock) refers to uart.o(.text.UART_Lock) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER0PeriphClockCmd) refers to cgc.o(.text.CGC_PER0PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER10PeriphClockCmd) refers to cgc.o(.text.CGC_PER10PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER11PeriphClockCmd) refers to cgc.o(.text.CGC_PER11PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER12PeriphClockCmd) refers to cgc.o(.text.CGC_PER12PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PER13PeriphClockCmd) refers to cgc.o(.text.CGC_PER13PeriphClockCmd) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_LSI_Enable) refers to cgc.o(.text.CGC_LSI_Enable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_LSI_Disable) refers to cgc.o(.text.CGC_LSI_Disable) for [Anonymous Symbol]
    cgc.o(.text.CGC_LSI_CFG_AS_FCLK) refers to cgc.o(.bss.USE_LSI_SYSTYEM_CLOCK) for USE_LSI_SYSTYEM_CLOCK
    cgc.o(.ARM.exidx.text.CGC_LSI_CFG_AS_FCLK) refers to cgc.o(.text.CGC_LSI_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.text.CGC_HSI_CFG_AS_FCLK) refers to cgc.o(.bss.USE_HSI_SYSTYEM_CLOCK) for USE_HSI_SYSTYEM_CLOCK
    cgc.o(.ARM.exidx.text.CGC_HSI_CFG_AS_FCLK) refers to cgc.o(.text.CGC_HSI_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.text.CGC_HSE_CFG_AS_FCLK) refers to cgc.o(.bss.USE_HSE_SYSTYEM_CLOCK) for USE_HSE_SYSTYEM_CLOCK
    cgc.o(.ARM.exidx.text.CGC_HSE_CFG_AS_FCLK) refers to cgc.o(.text.CGC_HSE_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_CFG_AS_FCLK) refers to cgc.o(.text.CGC_PLL_CFG_AS_FCLK) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_HSE_Disable) refers to cgc.o(.text.CGC_HSE_Disable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_OSC_Selet) refers to cgc.o(.text.CGC_OSC_Selet) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_SLEEP_Selet) refers to cgc.o(.text.CGC_SLEEP_Selet) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_Hoco_Stop) refers to cgc.o(.text.CGC_Hoco_Stop) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_Hoco_Start) refers to cgc.o(.text.CGC_Hoco_Start) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_LSITIMERCLK_Enable) refers to cgc.o(.text.CGC_LSITIMERCLK_Enable) for [Anonymous Symbol]
    cgc.o(.text.CGC_PLL_Enable) refers to cgc.o(.text.CGC_MCLK_Status) for CGC_MCLK_Status
    cgc.o(.ARM.exidx.text.CGC_PLL_Enable) refers to cgc.o(.text.CGC_PLL_Enable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_MCLK_Status) refers to cgc.o(.text.CGC_MCLK_Status) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Disable) refers to cgc.o(.text.CGC_PLL_Disable) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Sel) refers to cgc.o(.text.CGC_PLL_Sel) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Multi) refers to cgc.o(.text.CGC_PLL_Multi) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_PLL_Div) refers to cgc.o(.text.CGC_PLL_Div) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.CGC_MCLK_PLLSel) refers to cgc.o(.text.CGC_MCLK_PLLSel) for [Anonymous Symbol]
    cgc.o(.ARM.exidx.text.Reset_Status_Get) refers to cgc.o(.text.Reset_Status_Get) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigRunMode) refers to epwm.o(.text.EPWM_ConfigRunMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelClk) refers to epwm.o(.text.EPWM_ConfigChannelClk) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelPeriod) refers to epwm.o(.text.EPWM_ConfigChannelPeriod) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelSymDuty) refers to epwm.o(.text.EPWM_ConfigChannelSymDuty) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigChannelAsymDuty) refers to epwm.o(.text.EPWM_ConfigChannelAsymDuty) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableOneShotMode) refers to epwm.o(.text.EPWM_EnableOneShotMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableAutoLoadMode) refers to epwm.o(.text.EPWM_EnableAutoLoadMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigLoadAndIntMode) refers to epwm.o(.text.EPWM_ConfigLoadAndIntMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableEventLoad) refers to epwm.o(.text.EPWM_EnableEventLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableReverseOutput) refers to epwm.o(.text.EPWM_EnableReverseOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableReverseOutput) refers to epwm.o(.text.EPWM_DisableReverseOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableDeadZone) refers to epwm.o(.text.EPWM_EnableDeadZone) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableDeadZone) refers to epwm.o(.text.EPWM_DisableDeadZone) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableChannelRemap) refers to epwm.o(.text.EPWM_EnableChannelRemap) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableChannelRemap) refers to epwm.o(.text.EPWM_DisableChannelRemap) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableOutput) refers to epwm.o(.text.EPWM_EnableOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableOutput) refers to epwm.o(.text.EPWM_DisableOutput) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_Start) refers to epwm.o(.text.EPWM_Start) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_Stop) refers to epwm.o(.text.EPWM_Stop) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ForceStop) refers to epwm.o(.text.EPWM_ForceStop) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableMaskPreload) refers to epwm.o(.text.EPWM_EnableMaskPreload) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableMaskPreload) refers to epwm.o(.text.EPWM_DisableMaskPreload) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_WriteMaskBuffer) refers to epwm.o(.text.EPWM_WriteMaskBuffer) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableMaskOutPut) refers to epwm.o(.text.EPWM_EnableMaskOutPut) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableMaskOutPut) refers to epwm.o(.text.EPWM_DisableMaskOutPut) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigCompareTriger) refers to epwm.o(.text.EPWM_ConfigCompareTriger) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableHall) refers to epwm.o(.text.EPWM_EnableHall) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableHall) refers to epwm.o(.text.EPWM_DisableHall) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetHallState) refers to epwm.o(.text.EPWM_GetHallState) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorState) refers to epwm.o(.text.EPWM_ClearHallErrorState) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_AllBrakeEnable) refers to epwm.o(.text.EPWM_AllBrakeEnable) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_AllBrakeDisable) refers to epwm.o(.text.EPWM_AllBrakeDisable) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeMode) refers to epwm.o(.text.EPWM_ConfigBrakeMode) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverDelay) refers to epwm.o(.text.EPWM_ConfigBrakeRecoverDelay) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverLoad) refers to epwm.o(.text.EPWM_ConfigBrakeRecoverLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableFaultBrake) refers to epwm.o(.text.EPWM_EnableFaultBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableFaultBrake) refers to epwm.o(.text.EPWM_DisableFaultBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigFaultBrakeLevel) refers to epwm.o(.text.EPWM_ConfigFaultBrakeLevel) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableEXTLEBrake) refers to epwm.o(.text.EPWM_EnableEXTLEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableEXTEEBrake) refers to epwm.o(.text.EPWM_EnableEXTEEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeFilter) refers to epwm.o(.text.EPWM_ConfigBrakeFilter) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableACMP0LEBrake) refers to epwm.o(.text.EPWM_EnableACMP0LEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableACMP1LEBrake) refers to epwm.o(.text.EPWM_EnableACMP1LEBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableSoftwareBrake) refers to epwm.o(.text.EPWM_EnableSoftwareBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableSoftwareBrake) refers to epwm.o(.text.EPWM_DisableSoftwareBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableBrakeInt) refers to epwm.o(.text.EPWM_EnableBrakeInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableBrakeInt) refers to epwm.o(.text.EPWM_DisableBrakeInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetBrakeIntFlag) refers to epwm.o(.text.EPWM_GetBrakeIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearBrakeIntFlag) refers to epwm.o(.text.EPWM_ClearBrakeIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetBrakeFlag) refers to epwm.o(.text.EPWM_GetBrakeFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearBrake) refers to epwm.o(.text.EPWM_ClearBrake) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableHallErrorInt) refers to epwm.o(.text.EPWM_EnableHallErrorInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableHallErrorInt) refers to epwm.o(.text.EPWM_DisableHallErrorInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetHallErrorIntFlag) refers to epwm.o(.text.EPWM_GetHallErrorIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorIntFlag) refers to epwm.o(.text.EPWM_ClearHallErrorIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableUpCmpInt) refers to epwm.o(.text.EPWM_EnableUpCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableUpCmpInt) refers to epwm.o(.text.EPWM_DisableUpCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetUpCmpIntFlag) refers to epwm.o(.text.EPWM_GetUpCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearUpCmpIntFlag) refers to epwm.o(.text.EPWM_ClearUpCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableDownCmpInt) refers to epwm.o(.text.EPWM_EnableDownCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableDownCmpInt) refers to epwm.o(.text.EPWM_DisableDownCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetDownCmpIntFlag) refers to epwm.o(.text.EPWM_GetDownCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearDownCmpIntFlag) refers to epwm.o(.text.EPWM_ClearDownCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnablePeriodInt) refers to epwm.o(.text.EPWM_EnablePeriodInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisablePeriodInt) refers to epwm.o(.text.EPWM_DisablePeriodInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetPeriodIntFlag) refers to epwm.o(.text.EPWM_GetPeriodIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearPeriodIntFlag) refers to epwm.o(.text.EPWM_ClearPeriodIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableZeroInt) refers to epwm.o(.text.EPWM_EnableZeroInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableZeroInt) refers to epwm.o(.text.EPWM_DisableZeroInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetZeroIntFlag) refers to epwm.o(.text.EPWM_GetZeroIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearZeroIntFlag) refers to epwm.o(.text.EPWM_ClearZeroIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableCountCmpInt) refers to epwm.o(.text.EPWM_EnableCountCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableCountCmpInt) refers to epwm.o(.text.EPWM_DisableCountCmpInt) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_GetCountCmpIntFlag) refers to epwm.o(.text.EPWM_GetCountCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ClearCountCmpIntFlag) refers to epwm.o(.text.EPWM_ClearCountCmpIntFlag) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableBrakeIntSum) refers to epwm.o(.text.EPWM_EnableBrakeIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableBrakeIntSum) refers to epwm.o(.text.EPWM_DisableBrakeIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeIntSum) refers to epwm.o(.text.EPWM_ConfigBrakeIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableZeroIntSum) refers to epwm.o(.text.EPWM_EnableZeroIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableZeroIntSum) refers to epwm.o(.text.EPWM_DisableZeroIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_ConfigZeroIntSum) refers to epwm.o(.text.EPWM_ConfigZeroIntSum) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableIntAccompanyWithLoad) refers to epwm.o(.text.EPWM_EnableIntAccompanyWithLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableIntAccompanyWithLoad) refers to epwm.o(.text.EPWM_DisableIntAccompanyWithLoad) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_EnableDebugSuspend) refers to epwm.o(.text.EPWM_EnableDebugSuspend) for [Anonymous Symbol]
    epwm.o(.ARM.exidx.text.EPWM_DisableDebugSuspend) refers to epwm.o(.text.EPWM_DisableDebugSuspend) for [Anonymous Symbol]
    startup_cms32m67xx.o(RESET) refers to startup_cms32m67xx.o(STACK) for __initial_sp
    startup_cms32m67xx.o(RESET) refers to startup_cms32m67xx.o(.text) for Reset_Handler
    startup_cms32m67xx.o(RESET) refers to system_cms32m67xx.o(.text.HardFault_Handler) for HardFault_Handler
    startup_cms32m67xx.o(RESET) refers to bsp_systick.o(.text.SysTick_Handler) for SysTick_Handler
    startup_cms32m67xx.o(RESET) refers to system_cms32m67xx.o(.text.LVI_IRQHandler) for LVI_IRQHandler
    startup_cms32m67xx.o(RESET) refers to ym_timer.o(.text.TIMER0_IRQHandler) for TIMER0_IRQHandler
    startup_cms32m67xx.o(.text) refers to system_cms32m67xx.o(.text.SystemInit) for SystemInit
    startup_cms32m67xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_cms32m67xx.o(.text.CLK_GetHocoFreq) refers to system_cms32m67xx.o(.bss.frqsel) for frqsel
    system_cms32m67xx.o(.text.CLK_GetHocoFreq) refers to system_cms32m67xx.o(.bss.freq) for freq
    system_cms32m67xx.o(.ARM.exidx.text.CLK_GetHocoFreq) refers to system_cms32m67xx.o(.text.CLK_GetHocoFreq) for [Anonymous Symbol]
    system_cms32m67xx.o(.text.SystemCoreClockUpdate) refers to system_cms32m67xx.o(.text.CLK_GetHocoFreq) for CLK_GetHocoFreq
    system_cms32m67xx.o(.text.SystemCoreClockUpdate) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_cms32m67xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_cms32m67xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_cms32m67xx.o(.text.SystemInit) refers to system_cms32m67xx.o(.text.CLK_GetHocoFreq) for CLK_GetHocoFreq
    system_cms32m67xx.o(.text.SystemInit) refers to system_cms32m67xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_cms32m67xx.o(.ARM.exidx.text.SystemInit) refers to system_cms32m67xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_cms32m67xx.o(.text.LVI_IRQHandler) refers to system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    system_cms32m67xx.o(.ARM.exidx.text.LVI_IRQHandler) refers to system_cms32m67xx.o(.text.LVI_IRQHandler) for [Anonymous Symbol]
    system_cms32m67xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    system_cms32m67xx.o(.ARM.exidx.text.HardFault_Handler) refers to system_cms32m67xx.o(.text.HardFault_Handler) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_cms32m67xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_cms32m67xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.data.touchVal), (1 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.text.fputc), (44 bytes).
    Removing retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget.o(.text.fgetc), (36 bytes).
    Removing retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget.o(.text._sys_exit), (8 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing retarget.o(.bss.__stdout), (84 bytes).
    Removing retarget.o(.bss.__stdin), (84 bytes).
    Removing ym_ccp.o(.text), (0 bytes).
    Removing ym_ccp.o(.ARM.exidx.text.CCP_PWM_Config), (8 bytes).
    Removing ym_dma.o(.text), (0 bytes).
    Removing ym_dma.o(.text.DMA_CCP0A_Config), (84 bytes).
    Removing ym_dma.o(.ARM.exidx.text.DMA_CCP0A_Config), (8 bytes).
    Removing ym_rgb.o(.text), (0 bytes).
    Removing ym_rgb.o(.text.RGB_Output), (200 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Output), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_Init_Config), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.RGB_DataInit), (8 bytes).
    Removing ym_rgb.o(.ARM.exidx.text.getCamplarBuff), (8 bytes).
    Removing ym_rgb.o(.bss.RGB_Output.addr_add_num), (1 bytes).
    Removing ym_rgb.o(.bss.breath), (1 bytes).
    Removing ym_timer.o(.text), (0 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TIMER0_Init_Config), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing ym_timer.o(.ARM.exidx.text.TIMER0_IRQHandler), (8 bytes).
    Removing ym_uart.o(.text), (0 bytes).
    Removing ym_uart.o(.text.UART0_Config), (92 bytes).
    Removing ym_uart.o(.ARM.exidx.text.UART0_Config), (8 bytes).
    Removing ym_uart.o(.text.Uart0_putchar), (44 bytes).
    Removing ym_uart.o(.ARM.exidx.text.Uart0_putchar), (8 bytes).
    Removing ym_uart.o(.text.Uart0_getchar), (32 bytes).
    Removing ym_uart.o(.ARM.exidx.text.Uart0_getchar), (8 bytes).
    Removing ym_led.o(.text), (0 bytes).
    Removing ym_led.o(.text.LED_Init_Config), (110 bytes).
    Removing ym_led.o(.ARM.exidx.text.LED_Init_Config), (8 bytes).
    Removing ym_touch.o(.text), (0 bytes).
    Removing ym_touch.o(.text.Touch_Init_Config), (14 bytes).
    Removing ym_touch.o(.ARM.exidx.text.Touch_Init_Config), (8 bytes).
    Removing ym_epwm.o(.text), (0 bytes).
    Removing ym_epwm.o(.text.EPWM_Init_Config), (424 bytes).
    Removing ym_epwm.o(.ARM.exidx.text.EPWM_Init_Config), (8 bytes).
    Removing bsp_systick.o(.text), (0 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.Systick_Init_Config), (8 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing bsp_systick.o(.text.SysTick_Delay_us), (88 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Delay_us), (8 bytes).
    Removing bsp_systick.o(.text.SysTick_Delay_ms), (88 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Delay_ms), (8 bytes).
    Removing bsp_systick.o(.text.Delay_us), (48 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.Delay_us), (8 bytes).
    Removing bsp_systick.o(.text.Delay_ms), (52 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.Delay_ms), (8 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing bsp_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing dma.o(.text), (0 bytes).
    Removing dma.o(.text.DMA_Init), (268 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing dma.o(.text.DMA_Start), (44 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Start), (8 bytes).
    Removing dma.o(.text.DMA_Stop), (44 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Stop), (8 bytes).
    Removing dma.o(.text.DMA_Trigger), (52 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_Trigger), (8 bytes).
    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.text.delay1_us), (60 bytes).
    Removing delay.o(.ARM.exidx.text.delay1_us), (8 bytes).
    Removing delay.o(.text.m0_delay_ms), (36 bytes).
    Removing delay.o(.ARM.exidx.text.m0_delay_ms), (8 bytes).
    Removing delay.o(.text.m0_delay_us), (16 bytes).
    Removing delay.o(.ARM.exidx.text.m0_delay_us), (8 bytes).
    Removing delay.o(.text.delay_init), (32 bytes).
    Removing delay.o(.ARM.exidx.text.delay_init), (8 bytes).
    Removing delay.o(.bss.Value_us), (1 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.PORT_SetBit), (40 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_SetBit), (8 bytes).
    Removing gpio.o(.text.PORT_ClrBit), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_ClrBit), (8 bytes).
    Removing gpio.o(.text.PORT_ToggleBit), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_ToggleBit), (8 bytes).
    Removing gpio.o(.text.PORT_GetBit), (56 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_GetBit), (8 bytes).
    Removing gpio.o(.text.PORT_GetBitValue), (80 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_GetBitValue), (8 bytes).
    Removing gpio.o(.text.PORT_PullUp), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_PullUp), (8 bytes).
    Removing gpio.o(.text.PORT_PullDown), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.PORT_PullDown), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing gpio.o(.text.RESTPinGpio_Set), (40 bytes).
    Removing gpio.o(.ARM.exidx.text.RESTPinGpio_Set), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_Start), (8 bytes).
    Removing timer.o(.text.TMR_Stop), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_Stop), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_ConfigRunMode), (8 bytes).
    Removing timer.o(.text.TMR_EnableOneShotMode), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_EnableOneShotMode), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_DisableOneShotMode), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_ConfigClk), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_SetPeriod), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_EnableOverflowInt), (8 bytes).
    Removing timer.o(.text.TMR_DisableOverflowInt), (18 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_DisableOverflowInt), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_GetOverflowIntFlag), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_ClearOverflowIntFlag), (8 bytes).
    Removing timer.o(.text.TMR_GetTimingData), (12 bytes).
    Removing timer.o(.ARM.exidx.text.TMR_GetTimingData), (8 bytes).
    Removing ccp.o(.text), (0 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_Start), (8 bytes).
    Removing ccp.o(.text.CCP_Stop), (72 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_Stop), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCLK), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableRun), (8 bytes).
    Removing ccp.o(.text.CCP_DisableRun), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableRun), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnablePWMMode), (8 bytes).
    Removing ccp.o(.text.CCP_EnablePWMHalfCycleMode), (144 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnablePWMHalfCycleMode), (8 bytes).
    Removing ccp.o(.text.CCP_DisablePWMHalfCycleMode), (144 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisablePWMHalfCycleMode), (8 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCompare), (8 bytes).
    Removing ccp.o(.text.CCP_EnableReverseOutput), (148 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableReverseOutput), (8 bytes).
    Removing ccp.o(.text.CCP_DisableReverseOutput), (148 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableReverseOutput), (8 bytes).
    Removing ccp.o(.text.CCP_EnableOverflowInt), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableOverflowInt), (8 bytes).
    Removing ccp.o(.text.CCP_DisableOverflowInt), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableOverflowInt), (8 bytes).
    Removing ccp.o(.text.CCP_GetOverflowIntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetOverflowIntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearOverflowIntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearOverflowIntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCompareInt), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCompareInt), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCompareInt), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCompareInt), (8 bytes).
    Removing ccp.o(.text.CCP_GetCompareIntFlag), (24 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCompareIntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearCompareIntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCompareIntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode0), (88 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0), (8 bytes).
    Removing ccp.o(.text.CCP_ConfigCAPMode0), (92 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode0), (8 bytes).
    Removing ccp.o(.text.CCP_SelCAPMode0Channel), (96 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_SelCAPMode0Channel), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode0Result), (124 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode0Result), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode0Int), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode0Int), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode0Int), (40 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode0Int), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode0IntFlag), (24 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode0IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearCAPMode0IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCAPMode0IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode1), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode1), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPnReload), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPnReload), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPnReload), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPnReload), (8 bytes).
    Removing ccp.o(.text.CCP_ConfigCAPMode1), (60 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode1), (8 bytes).
    Removing ccp.o(.text.CCP_SelCAPMode1Channel), (460 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_SelCAPMode1Channel), (8 bytes).
    Removing ccp.o(.text.CCP_TriggerCaputer), (116 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_TriggerCaputer), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode1Result), (24 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode1Result), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode1Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode1Int), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode1Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode1Int), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode1IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode1IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearCAPMode1IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCAPMode1IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode2), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode2), (32 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2), (8 bytes).
    Removing ccp.o(.text.CCP_ConfigCAPMode2), (60 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ConfigCAPMode2), (8 bytes).
    Removing ccp.o(.text.CCP_SelCAPMode2Channel), (148 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_SelCAPMode2Channel), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode2Result), (112 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode2Result), (8 bytes).
    Removing ccp.o(.text.CCP_EnableCAPMode2Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_EnableCAPMode2Int), (8 bytes).
    Removing ccp.o(.text.CCP_DisableCAPMode2Int), (44 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_DisableCAPMode2Int), (8 bytes).
    Removing ccp.o(.text.CCP_GetCAPMode2IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_GetCAPMode2IntFlag), (8 bytes).
    Removing ccp.o(.text.CCP_ClearCAPMode2IntFlag), (28 bytes).
    Removing ccp.o(.ARM.exidx.text.CCP_ClearCAPMode2IntFlag), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.text.UART_ConfigRunMode), (68 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ConfigRunMode), (8 bytes).
    Removing uart.o(.text.UART_WriteTHR), (16 bytes).
    Removing uart.o(.ARM.exidx.text.UART_WriteTHR), (8 bytes).
    Removing uart.o(.text.UART_ReadRBR), (12 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ReadRBR), (8 bytes).
    Removing uart.o(.text.UART_EnableRxLineInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableRxLineInt), (8 bytes).
    Removing uart.o(.text.UART_DisableRxLineInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableRxLineInt), (8 bytes).
    Removing uart.o(.text.UART_EnableTHREInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableTHREInt), (8 bytes).
    Removing uart.o(.text.UART_DisableTHREInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableTHREInt), (8 bytes).
    Removing uart.o(.text.UART_EnableRBRInt), (24 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableRBRInt), (8 bytes).
    Removing uart.o(.text.UART_DisableRBRInt), (18 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableRBRInt), (8 bytes).
    Removing uart.o(.text.UART_Lock), (14 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Lock), (8 bytes).
    Removing cgc.o(.text), (0 bytes).
    Removing cgc.o(.text.CGC_PER0PeriphClockCmd), (52 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER0PeriphClockCmd), (8 bytes).
    Removing cgc.o(.text.CGC_PER10PeriphClockCmd), (52 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER10PeriphClockCmd), (8 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER11PeriphClockCmd), (8 bytes).
    Removing cgc.o(.text.CGC_PER12PeriphClockCmd), (48 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER12PeriphClockCmd), (8 bytes).
    Removing cgc.o(.text.CGC_PER13PeriphClockCmd), (48 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PER13PeriphClockCmd), (8 bytes).
    Removing cgc.o(.text.CGC_LSI_Enable), (12 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSI_Enable), (8 bytes).
    Removing cgc.o(.text.CGC_LSI_Disable), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSI_Disable), (8 bytes).
    Removing cgc.o(.text.CGC_LSI_CFG_AS_FCLK), (48 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSI_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_HSI_CFG_AS_FCLK), (52 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_HSI_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_HSE_CFG_AS_FCLK), (60 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_HSE_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_CFG_AS_FCLK), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_CFG_AS_FCLK), (8 bytes).
    Removing cgc.o(.text.CGC_HSE_Disable), (12 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_HSE_Disable), (8 bytes).
    Removing cgc.o(.text.CGC_OSC_Selet), (44 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_OSC_Selet), (8 bytes).
    Removing cgc.o(.text.CGC_SLEEP_Selet), (44 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_SLEEP_Selet), (8 bytes).
    Removing cgc.o(.text.CGC_Hoco_Stop), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_Hoco_Stop), (8 bytes).
    Removing cgc.o(.text.CGC_Hoco_Start), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_Hoco_Start), (8 bytes).
    Removing cgc.o(.text.CGC_LSITIMERCLK_Enable), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_LSITIMERCLK_Enable), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Enable), (32 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Enable), (8 bytes).
    Removing cgc.o(.text.CGC_MCLK_Status), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_MCLK_Status), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Disable), (16 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Disable), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Sel), (52 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Sel), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Multi), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Multi), (8 bytes).
    Removing cgc.o(.text.CGC_PLL_Div), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_PLL_Div), (8 bytes).
    Removing cgc.o(.text.CGC_MCLK_PLLSel), (28 bytes).
    Removing cgc.o(.ARM.exidx.text.CGC_MCLK_PLLSel), (8 bytes).
    Removing cgc.o(.text.Reset_Status_Get), (112 bytes).
    Removing cgc.o(.ARM.exidx.text.Reset_Status_Get), (8 bytes).
    Removing cgc.o(.bss.USE_HSE_SYSTYEM_CLOCK), (1 bytes).
    Removing cgc.o(.bss.USE_HSI_SYSTYEM_CLOCK), (1 bytes).
    Removing cgc.o(.bss.USE_LSE_SYSTYEM_CLOCK), (1 bytes).
    Removing cgc.o(.bss.USE_LSI_SYSTYEM_CLOCK), (1 bytes).
    Removing epwm.o(.text), (0 bytes).
    Removing epwm.o(.text.EPWM_ConfigRunMode), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigRunMode), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigChannelClk), (72 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelClk), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigChannelPeriod), (60 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelPeriod), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigChannelSymDuty), (88 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelSymDuty), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigChannelAsymDuty), (68 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigChannelAsymDuty), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableOneShotMode), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableOneShotMode), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableAutoLoadMode), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableAutoLoadMode), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigLoadAndIntMode), (64 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigLoadAndIntMode), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableEventLoad), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableEventLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableReverseOutput), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableReverseOutput), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableReverseOutput), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableReverseOutput), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableDeadZone), (448 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableDeadZone), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableDeadZone), (144 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableDeadZone), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableChannelRemap), (68 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableChannelRemap), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableChannelRemap), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableChannelRemap), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableOutput), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableOutput), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableOutput), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableOutput), (8 bytes).
    Removing epwm.o(.text.EPWM_Start), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_Start), (8 bytes).
    Removing epwm.o(.text.EPWM_Stop), (52 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_Stop), (8 bytes).
    Removing epwm.o(.text.EPWM_ForceStop), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ForceStop), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableMaskPreload), (52 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableMaskPreload), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableMaskPreload), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableMaskPreload), (8 bytes).
    Removing epwm.o(.text.EPWM_WriteMaskBuffer), (64 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_WriteMaskBuffer), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableMaskOutPut), (92 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableMaskOutPut), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableMaskOutPut), (56 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableMaskOutPut), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigCompareTriger), (56 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigCompareTriger), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableHall), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableHall), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableHall), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableHall), (8 bytes).
    Removing epwm.o(.text.EPWM_GetHallState), (20 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetHallState), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearHallErrorState), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorState), (8 bytes).
    Removing epwm.o(.text.EPWM_AllBrakeEnable), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_AllBrakeEnable), (8 bytes).
    Removing epwm.o(.text.EPWM_AllBrakeDisable), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_AllBrakeDisable), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeMode), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeMode), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeRecoverDelay), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverDelay), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeRecoverLoad), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeRecoverLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableFaultBrake), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableFaultBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableFaultBrake), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableFaultBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigFaultBrakeLevel), (64 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigFaultBrakeLevel), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableEXTLEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableEXTLEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableEXTEEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableEXTEEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeFilter), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeFilter), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableACMP0LEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableACMP0LEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableACMP1LEBrake), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableACMP1LEBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableSoftwareBrake), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableSoftwareBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableSoftwareBrake), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableSoftwareBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableBrakeInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableBrakeInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableBrakeInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableBrakeInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetBrakeIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetBrakeIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearBrakeIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearBrakeIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_GetBrakeFlag), (20 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetBrakeFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearBrake), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearBrake), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableHallErrorInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableHallErrorInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableHallErrorInt), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableHallErrorInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetHallErrorIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetHallErrorIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearHallErrorIntFlag), (16 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearHallErrorIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableUpCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableUpCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableUpCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableUpCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetUpCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetUpCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearUpCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearUpCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableDownCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableDownCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableDownCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableDownCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetDownCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetDownCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearDownCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearDownCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnablePeriodInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnablePeriodInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisablePeriodInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisablePeriodInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetPeriodIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetPeriodIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearPeriodIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearPeriodIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableZeroInt), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableZeroInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableZeroInt), (36 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableZeroInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetZeroIntFlag), (24 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetZeroIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearZeroIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearZeroIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableCountCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableCountCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableCountCmpInt), (40 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableCountCmpInt), (8 bytes).
    Removing epwm.o(.text.EPWM_GetCountCmpIntFlag), (24 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_GetCountCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_ClearCountCmpIntFlag), (28 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ClearCountCmpIntFlag), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableBrakeIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableBrakeIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableBrakeIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableBrakeIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigBrakeIntSum), (52 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigBrakeIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableZeroIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableZeroIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableZeroIntSum), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableZeroIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_ConfigZeroIntSum), (48 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_ConfigZeroIntSum), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableIntAccompanyWithLoad), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableIntAccompanyWithLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableIntAccompanyWithLoad), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableIntAccompanyWithLoad), (8 bytes).
    Removing epwm.o(.text.EPWM_EnableDebugSuspend), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_EnableDebugSuspend), (8 bytes).
    Removing epwm.o(.text.EPWM_DisableDebugSuspend), (32 bytes).
    Removing epwm.o(.ARM.exidx.text.EPWM_DisableDebugSuspend), (8 bytes).
    Removing startup_cms32m67xx.o(HEAP), (256 bytes).
    Removing system_cms32m67xx.o(.text), (0 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.CLK_GetHocoFreq), (8 bytes).
    Removing system_cms32m67xx.o(.text.SystemCoreClockUpdate), (16 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.LVI_IRQHandler), (8 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing system_cms32m67xx.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing system_cms32m67xx.o(.data.SystemAPBClock), (4 bytes).
    Removing system_cms32m67xx.o(.data.CyclesPerUs), (4 bytes).
    Removing system_cms32m67xx.o(.option_byte), (4 bytes).

464 unused section(s) (total 12614 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    RTE/Device/CMS32M67xx48FA/startup_CMS32M67xx.s 0x00000000   Number         0  startup_cms32m67xx.o ABSOLUTE
    YM_ccp.c                                 0x00000000   Number         0  ym_ccp.o ABSOLUTE
    YM_dma.c                                 0x00000000   Number         0  ym_dma.o ABSOLUTE
    YM_epwm.c                                0x00000000   Number         0  ym_epwm.o ABSOLUTE
    YM_led.c                                 0x00000000   Number         0  ym_led.o ABSOLUTE
    YM_rgb.c                                 0x00000000   Number         0  ym_rgb.o ABSOLUTE
    YM_timer.c                               0x00000000   Number         0  ym_timer.o ABSOLUTE
    YM_touch.c                               0x00000000   Number         0  ym_touch.o ABSOLUTE
    YM_uart.c                                0x00000000   Number         0  ym_uart.o ABSOLUTE
    bsp_SysTick.c                            0x00000000   Number         0  bsp_systick.o ABSOLUTE
    ccp.c                                    0x00000000   Number         0  ccp.o ABSOLUTE
    cgc.c                                    0x00000000   Number         0  cgc.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    dma.c                                    0x00000000   Number         0  dma.o ABSOLUTE
    epwm.c                                   0x00000000   Number         0  epwm.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    system_CMS32M67xx.c                      0x00000000   Number         0  system_cms32m67xx.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_cms32m67xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       32  startup_cms32m67xx.o(.text)
    .text                                    0x000000f4   Section        0  uidiv_div0.o(.text)
    .text                                    0x00000134   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x00000164   Section        0  ccp.o(.text.CCP_ConfigCLK)
    __arm_cp.2_2                             0x000001d0   Number         4  ccp.o(.text.CCP_ConfigCLK)
    __arm_cp.2_4                             0x000001d4   Number         4  ccp.o(.text.CCP_ConfigCLK)
    [Anonymous Symbol]                       0x000001d8   Section        0  ccp.o(.text.CCP_ConfigCompare)
    __arm_cp.8_2                             0x00000274   Number         4  ccp.o(.text.CCP_ConfigCompare)
    __arm_cp.8_3                             0x00000278   Number         4  ccp.o(.text.CCP_ConfigCompare)
    __arm_cp.8_4                             0x0000027c   Number         4  ccp.o(.text.CCP_ConfigCompare)
    [Anonymous Symbol]                       0x00000280   Section        0  ccp.o(.text.CCP_EnablePWMMode)
    [Anonymous Symbol]                       0x000002bc   Section        0  ccp.o(.text.CCP_EnableRun)
    __arm_cp.3_1                             0x000002dc   Number         4  ccp.o(.text.CCP_EnableRun)
    [Anonymous Symbol]                       0x000002e0   Section        0  ym_ccp.o(.text.CCP_PWM_Config)
    __arm_cp.0_0                             0x0000033c   Number         4  ym_ccp.o(.text.CCP_PWM_Config)
    __arm_cp.0_1                             0x00000340   Number         4  ym_ccp.o(.text.CCP_PWM_Config)
    [Anonymous Symbol]                       0x00000344   Section        0  ccp.o(.text.CCP_Start)
    __arm_cp.0_0                             0x00000380   Number         4  ccp.o(.text.CCP_Start)
    __arm_cp.0_1                             0x00000384   Number         4  ccp.o(.text.CCP_Start)
    __arm_cp.0_2                             0x00000388   Number         4  ccp.o(.text.CCP_Start)
    [Anonymous Symbol]                       0x0000038c   Section        0  cgc.o(.text.CGC_PER11PeriphClockCmd)
    __arm_cp.2_0                             0x000003b8   Number         4  cgc.o(.text.CGC_PER11PeriphClockCmd)
    [Anonymous Symbol]                       0x000003bc   Section        0  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_0                             0x000004bc   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_1                             0x000004c0   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_2                             0x000004c4   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_3                             0x000004c8   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_4                             0x000004cc   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_5                             0x000004d0   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_6                             0x000004d4   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_7                             0x000004d8   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_8                             0x000004dc   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_9                             0x000004e0   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_10                            0x000004e4   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_11                            0x000004e8   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_12                            0x000004ec   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_13                            0x000004f0   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    __arm_cp.0_14                            0x000004f4   Number         4  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    [Anonymous Symbol]                       0x000004f8   Section        0  gpio.o(.text.GPIO_Init)
    __arm_cp.7_0                             0x000006b4   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_1                             0x000006b8   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_2                             0x000006bc   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_3                             0x000006c0   Number         4  gpio.o(.text.GPIO_Init)
    __arm_cp.7_4                             0x000006c4   Number         4  gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x000006c8   Section        0  system_cms32m67xx.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x000006cc   Section        0  system_cms32m67xx.o(.text.LVI_IRQHandler)
    RGB_DataInit                             0x000006d7   Thumb Code    56  ym_rgb.o(.text.RGB_DataInit)
    [Anonymous Symbol]                       0x000006d6   Section        0  ym_rgb.o(.text.RGB_DataInit)
    [Anonymous Symbol]                       0x00000710   Section        0  ym_rgb.o(.text.RGB_Init_Config)
    __arm_cp.1_0                             0x00000730   Number         4  ym_rgb.o(.text.RGB_Init_Config)
    __arm_cp.1_1                             0x00000734   Number         4  ym_rgb.o(.text.RGB_Init_Config)
    SysTick_Config                           0x00000739   Thumb Code    68  bsp_systick.o(.text.SysTick_Config)
    [Anonymous Symbol]                       0x00000738   Section        0  bsp_systick.o(.text.SysTick_Config)
    __arm_cp.1_0                             0x0000077c   Number         4  bsp_systick.o(.text.SysTick_Config)
    __arm_cp.1_1                             0x00000780   Number         4  bsp_systick.o(.text.SysTick_Config)
    __arm_cp.1_2                             0x00000784   Number         4  bsp_systick.o(.text.SysTick_Config)
    [Anonymous Symbol]                       0x00000788   Section        0  bsp_systick.o(.text.SysTick_Handler)
    __arm_cp.6_0                             0x000007d8   Number         4  bsp_systick.o(.text.SysTick_Handler)
    __arm_cp.6_1                             0x000007dc   Number         4  bsp_systick.o(.text.SysTick_Handler)
    __arm_cp.6_2                             0x000007e0   Number         4  bsp_systick.o(.text.SysTick_Handler)
    __arm_cp.6_3                             0x000007e4   Number         4  bsp_systick.o(.text.SysTick_Handler)
    __arm_cp.6_4                             0x000007e8   Number         4  bsp_systick.o(.text.SysTick_Handler)
    __arm_cp.6_5                             0x000007ec   Number         4  bsp_systick.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000007f0   Section        0  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_0                             0x00000860   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_1                             0x00000864   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_2                             0x00000868   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_3                             0x0000086c   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_4                             0x00000870   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_5                             0x00000874   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_6                             0x00000878   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_11                            0x0000087c   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_12                            0x00000880   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_13                            0x00000884   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_14                            0x00000888   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_15                            0x0000088c   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_16                            0x00000890   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_17                            0x00000894   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_18                            0x00000898   Number         4  system_cms32m67xx.o(.text.SystemInit)
    __arm_cp.2_19                            0x0000089c   Number         4  system_cms32m67xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000008a0   Section        0  bsp_systick.o(.text.Systick_Init_Config)
    __arm_cp.0_0                             0x000008bc   Number         4  bsp_systick.o(.text.Systick_Init_Config)
    __arm_cp.0_1                             0x000008c0   Number         4  bsp_systick.o(.text.Systick_Init_Config)
    [Anonymous Symbol]                       0x000008c4   Section        0  ym_timer.o(.text.TIMER0_IRQHandler)
    [Anonymous Symbol]                       0x000008dc   Section        0  ym_timer.o(.text.TIMER0_Init_Config)
    [Anonymous Symbol]                       0x0000092c   Section        0  timer.o(.text.TMR_ClearOverflowIntFlag)
    [Anonymous Symbol]                       0x0000093c   Section        0  timer.o(.text.TMR_ConfigClk)
    [Anonymous Symbol]                       0x0000095a   Section        0  timer.o(.text.TMR_ConfigRunMode)
    [Anonymous Symbol]                       0x0000097e   Section        0  timer.o(.text.TMR_DisableOneShotMode)
    [Anonymous Symbol]                       0x00000990   Section        0  timer.o(.text.TMR_EnableOverflowInt)
    [Anonymous Symbol]                       0x000009a2   Section        0  timer.o(.text.TMR_GetOverflowIntFlag)
    [Anonymous Symbol]                       0x000009b2   Section        0  timer.o(.text.TMR_SetPeriod)
    [Anonymous Symbol]                       0x000009c2   Section        0  timer.o(.text.TMR_Start)
    __NVIC_ClearPendingIRQ                   0x000009d5   Thumb Code    40  system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x000009d4   Section        0  system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ)
    __arm_cp.4_0                             0x000009fc   Number         4  system_cms32m67xx.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_EnableIRQ                         0x00000a01   Thumb Code    40  ym_timer.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00000a00   Section        0  ym_timer.o(.text.__NVIC_EnableIRQ)
    __arm_cp.1_0                             0x00000a28   Number         4  ym_timer.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x00000a2d   Thumb Code   124  ym_timer.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00000a2c   Section        0  ym_timer.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00000aa9   Thumb Code   124  bsp_systick.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00000aa8   Section        0  bsp_systick.o(.text.__NVIC_SetPriority)
    __arm_cp.7_0                             0x00000b24   Number         4  bsp_systick.o(.text.__NVIC_SetPriority)
    __arm_cp.7_1                             0x00000b28   Number         4  bsp_systick.o(.text.__NVIC_SetPriority)
    getCamplarBuff                           0x00000b2d   Thumb Code   172  ym_rgb.o(.text.getCamplarBuff)
    [Anonymous Symbol]                       0x00000b2c   Section        0  ym_rgb.o(.text.getCamplarBuff)
    __arm_cp.3_0                             0x00000bd8   Number         4  ym_rgb.o(.text.getCamplarBuff)
    __arm_cp.3_1                             0x00000bdc   Number         4  ym_rgb.o(.text.getCamplarBuff)
    __arm_cp.3_2                             0x00000be0   Number         4  ym_rgb.o(.text.getCamplarBuff)
    [Anonymous Symbol]                       0x00000be4   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x00000c10   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x00000c14   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x00000c18   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x00000c1c   Number         4  main.o(.text.main)
    i.__scatterload_copy                     0x00000c20   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000c2e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000c30   Section       14  handlers.o(i.__scatterload_zeroinit)
    SysTick_Handler.camplerTicks             0x20000194   Data           1  bsp_systick.o(.bss.SysTick_Handler.camplerTicks)
    [Anonymous Symbol]                       0x20000194   Section        0  bsp_systick.o(.bss.SysTick_Handler.camplerTicks)
    Ticks                                    0x2000019c   Data           4  bsp_systick.o(.bss.Ticks)
    [Anonymous Symbol]                       0x2000019c   Section        0  bsp_systick.o(.bss.Ticks)
    STACK                                    0x200001a8   Section     1024  startup_cms32m67xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_cms32m67xx.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code     8  startup_cms32m67xx.o(.text)
    NMI_Handler                              0x000000dd   Thumb Code     2  startup_cms32m67xx.o(.text)
    SVC_Handler                              0x000000e1   Thumb Code     2  startup_cms32m67xx.o(.text)
    PendSV_Handler                           0x000000e3   Thumb Code     2  startup_cms32m67xx.o(.text)
    Reserved_IRQHandler                      0x000000e7   Thumb Code     2  startup_cms32m67xx.o(.text)
    ACMP_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    ADC_IRQHandler                           0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    CCP_IRQHandler                           0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    EPWM_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    FMC_IRQHandler                           0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    HALL_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    I2C0_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP0_IRQHandler                         0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP1_IRQHandler                         0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP2_IRQHandler                         0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    INTP3_IRQHandler                         0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    LSITIMER_IRQHandler                      0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    SSP0_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    TIMER1_IRQHandler                        0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM00_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM01H_IRQHandler                         0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM01_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM02_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    TM03_IRQHandler                          0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    UART0_IRQHandler                         0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    UART1_IRQHandler                         0x000000e9   Thumb Code     0  startup_cms32m67xx.o(.text)
    __aeabi_uidiv                            0x000000f5   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x000000f5   Thumb Code    62  uidiv_div0.o(.text)
    __scatterload                            0x00000135   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000135   Thumb Code     0  init.o(.text)
    CCP_ConfigCLK                            0x00000165   Thumb Code   108  ccp.o(.text.CCP_ConfigCLK)
    CCP_ConfigCompare                        0x000001d9   Thumb Code   156  ccp.o(.text.CCP_ConfigCompare)
    CCP_EnablePWMMode                        0x00000281   Thumb Code    60  ccp.o(.text.CCP_EnablePWMMode)
    CCP_EnableRun                            0x000002bd   Thumb Code    32  ccp.o(.text.CCP_EnableRun)
    CCP_PWM_Config                           0x000002e1   Thumb Code    92  ym_ccp.o(.text.CCP_PWM_Config)
    CCP_Start                                0x00000345   Thumb Code    60  ccp.o(.text.CCP_Start)
    CGC_PER11PeriphClockCmd                  0x0000038d   Thumb Code    44  cgc.o(.text.CGC_PER11PeriphClockCmd)
    CLK_GetHocoFreq                          0x000003bd   Thumb Code   256  system_cms32m67xx.o(.text.CLK_GetHocoFreq)
    GPIO_Init                                0x000004f9   Thumb Code   444  gpio.o(.text.GPIO_Init)
    HardFault_Handler                        0x000006c9   Thumb Code     4  system_cms32m67xx.o(.text.HardFault_Handler)
    LVI_IRQHandler                           0x000006cd   Thumb Code    10  system_cms32m67xx.o(.text.LVI_IRQHandler)
    RGB_Init_Config                          0x00000711   Thumb Code    32  ym_rgb.o(.text.RGB_Init_Config)
    SysTick_Handler                          0x00000789   Thumb Code    80  bsp_systick.o(.text.SysTick_Handler)
    SystemInit                               0x000007f1   Thumb Code   112  system_cms32m67xx.o(.text.SystemInit)
    Systick_Init_Config                      0x000008a1   Thumb Code    28  bsp_systick.o(.text.Systick_Init_Config)
    TIMER0_IRQHandler                        0x000008c5   Thumb Code    24  ym_timer.o(.text.TIMER0_IRQHandler)
    TIMER0_Init_Config                       0x000008dd   Thumb Code    80  ym_timer.o(.text.TIMER0_Init_Config)
    TMR_ClearOverflowIntFlag                 0x0000092d   Thumb Code    16  timer.o(.text.TMR_ClearOverflowIntFlag)
    TMR_ConfigClk                            0x0000093d   Thumb Code    30  timer.o(.text.TMR_ConfigClk)
    TMR_ConfigRunMode                        0x0000095b   Thumb Code    36  timer.o(.text.TMR_ConfigRunMode)
    TMR_DisableOneShotMode                   0x0000097f   Thumb Code    18  timer.o(.text.TMR_DisableOneShotMode)
    TMR_EnableOverflowInt                    0x00000991   Thumb Code    18  timer.o(.text.TMR_EnableOverflowInt)
    TMR_GetOverflowIntFlag                   0x000009a3   Thumb Code    16  timer.o(.text.TMR_GetOverflowIntFlag)
    TMR_SetPeriod                            0x000009b3   Thumb Code    16  timer.o(.text.TMR_SetPeriod)
    TMR_Start                                0x000009c3   Thumb Code    18  timer.o(.text.TMR_Start)
    main                                     0x00000be5   Thumb Code    44  main.o(.text.main)
    __scatterload_copy                       0x00000c21   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000c2f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000c31   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00000c40   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00000c60   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_cms32m67xx.o(.data.SystemCoreClock)
    ccpCamplerDataPoint                      0x20000004   Data           4  bsp_systick.o(.data.ccpCamplerDataPoint)
    testData                                 0x20000008   Data          96  ym_rgb.o(.data.testData)
    CGCdata                                  0x20000068   Data           4  main.o(.bss.CGCdata)
    RGB_DataStracture                        0x2000006c   Data         296  ym_rgb.o(.bss.RGB_DataStracture)
    TIMER0Data                               0x20000198   Data           4  main.o(.bss.TIMER0Data)
    freq                                     0x200001a0   Data           4  system_cms32m67xx.o(.bss.freq)
    frqsel                                   0x200001a4   Data           1  system_cms32m67xx.o(.bss.frqsel)
    __initial_sp                             0x200005a8   Data           0  startup_cms32m67xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00000cc8, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000c60, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          598    RESET               startup_cms32m67xx.o
    0x000000c0   0x000000c0   0x00000000   Code   RO          630  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO          637    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO          640    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO          642    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO          644    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO          645    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO          647    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO          649    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO          638    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x00000020   Code   RO          599    .text               startup_cms32m67xx.o
    0x000000f4   0x000000f4   0x0000003e   Code   RO          653    .text               mc_p.l(uidiv_div0.o)
    0x00000132   0x00000132   0x00000002   PAD
    0x00000134   0x00000134   0x00000030   Code   RO          659    .text               mc_p.l(init.o)
    0x00000164   0x00000164   0x00000074   Code   RO          233    .text.CCP_ConfigCLK  ccp.o
    0x000001d8   0x000001d8   0x000000a8   Code   RO          245    .text.CCP_ConfigCompare  ccp.o
    0x00000280   0x00000280   0x0000003c   Code   RO          239    .text.CCP_EnablePWMMode  ccp.o
    0x000002bc   0x000002bc   0x00000024   Code   RO          235    .text.CCP_EnableRun  ccp.o
    0x000002e0   0x000002e0   0x00000064   Code   RO           29    .text.CCP_PWM_Config  ym_ccp.o
    0x00000344   0x00000344   0x00000048   Code   RO          229    .text.CCP_Start     ccp.o
    0x0000038c   0x0000038c   0x00000030   Code   RO          363    .text.CGC_PER11PeriphClockCmd  cgc.o
    0x000003bc   0x000003bc   0x0000013c   Code   RO          606    .text.CLK_GetHocoFreq  system_cms32m67xx.o
    0x000004f8   0x000004f8   0x000001d0   Code   RO          187    .text.GPIO_Init     gpio.o
    0x000006c8   0x000006c8   0x00000004   Code   RO          616    .text.HardFault_Handler  system_cms32m67xx.o
    0x000006cc   0x000006cc   0x0000000a   Code   RO          612    .text.LVI_IRQHandler  system_cms32m67xx.o
    0x000006d6   0x000006d6   0x00000038   Code   RO           49    .text.RGB_DataInit  ym_rgb.o
    0x0000070e   0x0000070e   0x00000002   PAD
    0x00000710   0x00000710   0x00000028   Code   RO           47    .text.RGB_Init_Config  ym_rgb.o
    0x00000738   0x00000738   0x00000050   Code   RO          118    .text.SysTick_Config  bsp_systick.o
    0x00000788   0x00000788   0x00000068   Code   RO          128    .text.SysTick_Handler  bsp_systick.o
    0x000007f0   0x000007f0   0x000000b0   Code   RO          610    .text.SystemInit    system_cms32m67xx.o
    0x000008a0   0x000008a0   0x00000024   Code   RO          116    .text.Systick_Init_Config  bsp_systick.o
    0x000008c4   0x000008c4   0x00000018   Code   RO           70    .text.TIMER0_IRQHandler  ym_timer.o
    0x000008dc   0x000008dc   0x00000050   Code   RO           64    .text.TIMER0_Init_Config  ym_timer.o
    0x0000092c   0x0000092c   0x00000010   Code   RO          218    .text.TMR_ClearOverflowIntFlag  timer.o
    0x0000093c   0x0000093c   0x0000001e   Code   RO          208    .text.TMR_ConfigClk  timer.o
    0x0000095a   0x0000095a   0x00000024   Code   RO          202    .text.TMR_ConfigRunMode  timer.o
    0x0000097e   0x0000097e   0x00000012   Code   RO          206    .text.TMR_DisableOneShotMode  timer.o
    0x00000990   0x00000990   0x00000012   Code   RO          212    .text.TMR_EnableOverflowInt  timer.o
    0x000009a2   0x000009a2   0x00000010   Code   RO          216    .text.TMR_GetOverflowIntFlag  timer.o
    0x000009b2   0x000009b2   0x00000010   Code   RO          210    .text.TMR_SetPeriod  timer.o
    0x000009c2   0x000009c2   0x00000012   Code   RO          198    .text.TMR_Start     timer.o
    0x000009d4   0x000009d4   0x0000002c   Code   RO          614    .text.__NVIC_ClearPendingIRQ  system_cms32m67xx.o
    0x00000a00   0x00000a00   0x0000002c   Code   RO           66    .text.__NVIC_EnableIRQ  ym_timer.o
    0x00000a2c   0x00000a2c   0x0000007c   Code   RO           68    .text.__NVIC_SetPriority  ym_timer.o
    0x00000aa8   0x00000aa8   0x00000084   Code   RO          130    .text.__NVIC_SetPriority  bsp_systick.o
    0x00000b2c   0x00000b2c   0x000000b8   Code   RO           51    .text.getCamplarBuff  ym_rgb.o
    0x00000be4   0x00000be4   0x0000003c   Code   RO            2    .text.main          main.o
    0x00000c20   0x00000c20   0x0000000e   Code   RO          663    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00000c2e   0x00000c2e   0x00000002   Code   RO          664    i.__scatterload_null  mc_p.l(handlers.o)
    0x00000c30   0x00000c30   0x0000000e   Code   RO          665    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00000c3e   0x00000c3e   0x00000002   PAD
    0x00000c40   0x00000c40   0x00000020   Data   RO          662    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00000c60, Size: 0x000005a8, Max: 0x00001000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000c60   0x00000004   Data   RW          618    .data.SystemCoreClock  system_cms32m67xx.o
    0x20000004   0x00000c64   0x00000004   Data   RW          133    .data.ccpCamplerDataPoint  bsp_systick.o
    0x20000008   0x00000c68   0x00000060   Data   RW           53    .data.testData      ym_rgb.o
    0x20000068        -       0x00000004   Zero   RW            5    .bss.CGCdata        main.o
    0x2000006c        -       0x00000128   Zero   RW           56    .bss.RGB_DataStracture  ym_rgb.o
    0x20000194        -       0x00000001   Zero   RW          134    .bss.SysTick_Handler.camplerTicks  bsp_systick.o
    0x20000195   0x00000cc8   0x00000003   PAD
    0x20000198        -       0x00000004   Zero   RW            6    .bss.TIMER0Data     main.o
    0x2000019c        -       0x00000004   Zero   RW          132    .bss.Ticks          bsp_systick.o
    0x200001a0        -       0x00000004   Zero   RW          623    .bss.freq           system_cms32m67xx.o
    0x200001a4        -       0x00000001   Zero   RW          622    .bss.frqsel         system_cms32m67xx.o
    0x200001a5   0x00000cc8   0x00000003   PAD
    0x200001a8        -       0x00000400   Zero   RW          596    STACK               startup_cms32m67xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       352         52          0          4          5       3915   bsp_systick.o
       452         36          0          0          0       8993   ccp.o
        48          4          0          0          0       5117   cgc.o
       464         48          0          0          0       7556   gpio.o
        60         16          0          0          8       1857   main.o
        32         10        192          0       1024        712   startup_cms32m67xx.o
       550        212          0          4          5       4354   system_cms32m67xx.o
       168          0          0          0          0       2138   timer.o
       100          8          0          0          0       5573   ym_ccp.o
       280         20          0         96        296       6312   ym_rgb.o
       272          4          0          0          0       2651   ym_timer.o

    ----------------------------------------------------------------------
      2780        410        224        104       1344      49178   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          0          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        62          0          0          0          0         72   uidiv_div0.o

    ----------------------------------------------------------------------
       164         18          0          0          0        140   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       160         18          0          0          0        140   mc_p.l

    ----------------------------------------------------------------------
       164         18          0          0          0        140   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2944        428        224        104       1344      49290   Grand Totals
      2944        428        224        104       1344      49290   ELF Image Totals
      2944        428        224        104          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3168 (   3.09kB)
    Total RW  Size (RW Data + ZI Data)              1448 (   1.41kB)
    Total ROM Size (Code + RO Data + RW Data)       3272 (   3.20kB)

==============================================================================

